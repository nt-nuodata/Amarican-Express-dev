{"Edges":[{"id":"e-0","source":"Shortcut_to_ALLIVET_ORDER_DAY","target":"SQ_Shortcut_to_ALLIVET_ORDER_DAY","transformationType":"Source Qualifier"},{"id":"e-1","source":"Shortcut_to_ALLIVET_DAILY_ORDER_PRE","target":"SQ_Shortcut_to_ALLIVET_DAILY_ORDER_PRE","transformationType":"Source Qualifier"},{"id":"e-2","source":"Shortcut_to_SKU_PROFILE","target":"SQ_Shortcut_to_SKU_PROFILE","transformationType":"Source Qualifier"},{"id":"e-3","source":"SQ_Shortcut_to_ALLIVET_DAILY_ORDER_PRE","target":"Jnr_Sku_Profile","transformationType":"Joiner"},{"id":"e-4","source":"SQ_Shortcut_to_SKU_PROFILE","target":"Jnr_Sku_Profile","transformationType":"Joiner"},{"id":"e-5","source":"Jnr_Sku_Profile","target":"Jnr_Order_Day","transformationType":"Joiner"},{"id":"e-6","source":"SQ_Shortcut_to_ALLIVET_ORDER_DAY","target":"Jnr_Order_Day","transformationType":"Joiner"},{"id":"e-7","source":"Jnr_Order_Day","target":"Exp_Update_Flag","transformationType":"Expression"},{"id":"e-8","source":"Exp_Update_Flag","target":"Fil_Update_Insert","transformationType":"Filter"},{"id":"e-9","source":"Fil_Update_Insert","target":"UPDTRANS","transformationType":"Update Strategy"},{"id":"e-10","source":"UPDTRANS","target":"Shortcut_to_ALLIVET_ORDER_DAY1","transformationType":"Target Definition"}],"Nodes":[{"data":{"transformationType":"Source Definition","label":"Shortcut_to_ALLIVET_ORDER_DAY","queries":["df_0 = spark.sql(\"\"\"SELECT\n  ALLIVET_ORDER_NBR_v2_test__ AS ALLIVET_ORDER_NBR,\n  ALLIVET_ORDER_LN_NBR_v2_test__ AS ALLIVET_ORDER_LN_NBR,\n  ALLIVET_ORDER_DT AS ALLIVET_ORDER_DT,\n  PETSMART_ORDER_DT AS PETSMART_ORDER_DT,\n  ORDER_STATUS AS ORDER_STATUS,\n  PRODUCT_ID AS PRODUCT_ID,\n  PETSMART_ORDER_NBR AS PETSMART_ORDER_NBR,\n  PETSMART_SKU_NBR AS PETSMART_SKU_NBR,\n  ALLIVET_SKU_NBR AS ALLIVET_SKU_NBR,\n  SUB_TOTAL_AMT AS SUB_TOTAL_AMT,\n  FREIGHT_COST AS FREIGHT_COST,\n  TOTAL_AMT AS TOTAL_AMT,\n  SHIP_METHOD_CD AS SHIP_METHOD_CD,\n  ORDER_VOIDED_FLAG AS ORDER_VOIDED_FLAG,\n  ORDER_ONHOLD_FLAG AS ORDER_ONHOLD_FLAG,\n  ORDER_CREATED_DT AS ORDER_CREATED_DT,\n  ORDER_MODIFIED_DT AS ORDER_MODIFIED_DT,\n  SHIPPED_DT AS SHIPPED_DT,\n  ORDER_SHIPPED_FLAG AS ORDER_SHIPPED_FLAG,\n  INTERNAL_NOTES AS INTERNAL_NOTES,\n  PUBLIC_NOTES AS PUBLIC_NOTES,\n  AUTOSHIP_DISCOUNT_AMT AS AUTOSHIP_DISCOUNT_AMT,\n  ORDER_MERCHANT_NOTES AS ORDER_MERCHANT_NOTES,\n  RISKORDER_FLAG AS RISKORDER_FLAG,\n  RISK_REASON AS RISK_REASON,\n  ORIG_SHIP_METHOD_CD AS ORIG_SHIP_METHOD_CD,\n  SHIP_HOLD_FLAG AS SHIP_HOLD_FLAG,\n  SHIP_HOLD_DT AS SHIP_HOLD_DT,\n  SHIP_RELEASE_DT AS SHIP_RELEASE_DT,\n  ORDER_QTY AS ORDER_QTY,\n  ITEM_DESC AS ITEM_DESC,\n  EXT_PRICE AS EXT_PRICE,\n  ORDER_DETAIL_CREATED_DT AS ORDER_DETAIL_CREATED_DT,\n  ORDER_DETAIL_MODIFIED_DT AS ORDER_DETAIL_MODIFIED_DT,\n  HOW_TO_GET_RX AS HOW_TO_GET_RX,\n  VET_CD AS VET_CD,\n  PET_CD AS PET_CD,\n  ORDER_DETAIL_ONHOLD_FLAG AS ORDER_DETAIL_ONHOLD_FLAG,\n  ONHOLD_TO_FILL_FLAG AS ONHOLD_TO_FILL_FLAG,\n  UPDATE_TSTMP AS UPDATE_TSTMP,\n  LOAD_TSTMP AS LOAD_TSTMP\nFROM\n  ALLIVET_ORDER_DAY_v2_test__\"\"\")","df_0.createOrReplaceTempView(\"Shortcut_to_ALLIVET_ORDER_DAY_0\")"]},"id":"Shortcut_to_ALLIVET_ORDER_DAY","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Qualifier","label":"SQ_Shortcut_to_ALLIVET_ORDER_DAY","queries":["df_1 = spark.sql(\"\"\"SELECT\n  ALLIVET_ORDER_NBR AS ALLIVET_ORDER_NBR,\n  ALLIVET_ORDER_LN_NBR AS ALLIVET_ORDER_LN_NBR,\n  ALLIVET_ORDER_DT AS ALLIVET_ORDER_DT,\n  PETSMART_ORDER_DT AS PETSMART_ORDER_DT,\n  ORDER_STATUS AS ORDER_STATUS,\n  PRODUCT_ID AS PRODUCT_ID,\n  PETSMART_ORDER_NBR AS PETSMART_ORDER_NBR,\n  PETSMART_SKU_NBR AS PETSMART_SKU_NBR,\n  ALLIVET_SKU_NBR AS ALLIVET_SKU_NBR,\n  SUB_TOTAL_AMT AS SUB_TOTAL_AMT,\n  FREIGHT_COST AS FREIGHT_COST,\n  TOTAL_AMT AS TOTAL_AMT,\n  SHIP_METHOD_CD AS SHIP_METHOD_CD,\n  ORDER_VOIDED_FLAG AS ORDER_VOIDED_FLAG,\n  ORDER_ONHOLD_FLAG AS ORDER_ONHOLD_FLAG,\n  ORDER_CREATED_DT AS ORDER_CREATED_DT,\n  ORDER_MODIFIED_DT AS ORDER_MODIFIED_DT,\n  SHIPPED_DT AS SHIPPED_DT,\n  ORDER_SHIPPED_FLAG AS ORDER_SHIPPED_FLAG,\n  INTERNAL_NOTES AS INTERNAL_NOTES,\n  PUBLIC_NOTES AS PUBLIC_NOTES,\n  AUTOSHIP_DISCOUNT_AMT AS AUTOSHIP_DISCOUNT_AMT,\n  ORDER_MERCHANT_NOTES AS ORDER_MERCHANT_NOTES,\n  RISKORDER_FLAG AS RISKORDER_FLAG,\n  RISK_REASON AS RISK_REASON,\n  ORIG_SHIP_METHOD_CD AS ORIG_SHIP_METHOD_CD,\n  SHIP_HOLD_FLAG AS SHIP_HOLD_FLAG,\n  SHIP_HOLD_DT AS SHIP_HOLD_DT,\n  SHIP_RELEASE_DT AS SHIP_RELEASE_DT,\n  ORDER_QTY AS ORDER_QTY,\n  ITEM_DESC AS ITEM_DESC,\n  ORDER_DETAIL_CREATED_DT AS ORDER_DETAIL_CREATED_DT,\n  ORDER_DETAIL_MODIFIED_DT AS ORDER_DETAIL_MODIFIED_DT,\n  HOW_TO_GET_RX AS HOW_TO_GET_RX,\n  VET_CD AS VET_CD,\n  PET_CD AS PET_CD,\n  ORDER_DETAIL_ONHOLD_FLAG AS ORDER_DETAIL_ONHOLD_FLAG,\n  ONHOLD_TO_FILL_FLAG AS ONHOLD_TO_FILL_FLAG,\n  UPDATE_TSTMP AS UPDATE_TSTMP,\n  LOAD_TSTMP AS LOAD_TSTMP,\n  monotonically_increasing_id() AS Monotonically_Increasing_Id\nFROM\n  Shortcut_to_ALLIVET_ORDER_DAY_0\"\"\")","df_1.createOrReplaceTempView(\"SQ_Shortcut_to_ALLIVET_ORDER_DAY_1\")"]},"id":"SQ_Shortcut_to_ALLIVET_ORDER_DAY","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"Shortcut_to_ALLIVET_DAILY_ORDER_PRE","queries":["df_2 = spark.sql(\"\"\"SELECT\n  ALLIVET_ORDER_CODE AS ALLIVET_ORDER_CODE,\n  ALLIVET_ORDER_LINE_NUMBER AS ALLIVET_ORDER_LINE_NUMBER,\n  ALLIVET_ORDER_DATE AS ALLIVET_ORDER_DATE,\n  PETSMART_ORDER_DATE AS PETSMART_ORDER_DATE,\n  ORDER_STATUS AS ORDER_STATUS,\n  PETSMART_ORDER_CODE AS PETSMART_ORDER_CODE,\n  SUB_TOTAL AS SUB_TOTAL,\n  FREIGHT AS FREIGHT,\n  TOTAL AS TOTAL,\n  SHIPPING_METHOD_CODE AS SHIPPING_METHOD_CODE,\n  IS_ORDER_VOIDED AS IS_ORDER_VOIDED,\n  IS_ORDER_ONHOLD AS IS_ORDER_ONHOLD,\n  ORDER_CREATED_DATE AS ORDER_CREATED_DATE,\n  ORDER_MODIFIED_DATE AS ORDER_MODIFIED_DATE,\n  SHIPPED_DATE AS SHIPPED_DATE,\n  IS_ORDER_SHIPPED AS IS_ORDER_SHIPPED,\n  INTERNAL_NOTES AS INTERNAL_NOTES,\n  PUBLIC_NOTES AS PUBLIC_NOTES,\n  AUTOSHIP_DISCOUNT_AMOUNT AS AUTOSHIP_DISCOUNT_AMOUNT,\n  ORDER_MERCHANT_NOTES AS ORDER_MERCHANT_NOTES,\n  IS_RISKORDER AS IS_RISKORDER,\n  RISK_REASONS AS RISK_REASONS,\n  ORIGINAL_SHIPPING_METHOD_CODE AS ORIGINAL_SHIPPING_METHOD_CODE,\n  IS_SHIPHOLD AS IS_SHIPHOLD,\n  SHIPHOLD_DATE AS SHIPHOLD_DATE,\n  SHIPRELEASED_DATE AS SHIPRELEASED_DATE,\n  ALLIVET_SKU AS ALLIVET_SKU,\n  PETSMART_SKU_v2_test__ AS PETSMART_SKU,\n  ORDERED_QUANTITY AS ORDERED_QUANTITY,\n  ITEM_DESCRIPTION AS ITEM_DESCRIPTION,\n  EXT_PRICE AS EXT_PRICE,\n  ORDER_DETAIL_CREATED_DATE AS ORDER_DETAIL_CREATED_DATE,\n  ORDER_DETAIL_MODIFIED_DATE AS ORDER_DETAIL_MODIFIED_DATE,\n  HOW_TO_GET_RX AS HOW_TO_GET_RX,\n  VET_CODE AS VET_CODE,\n  PET_CODE AS PET_CODE,\n  IS_ORDER_DETAIL_ONHOLD AS IS_ORDER_DETAIL_ONHOLD,\n  IS_ONHOLD_TOFILL AS IS_ONHOLD_TOFILL,\n  LOAD_TSTMP AS LOAD_TSTMP\nFROM\n  ALLIVET_DAILY_ORDER_PRE_v2_test__\"\"\")","df_2.createOrReplaceTempView(\"Shortcut_to_ALLIVET_DAILY_ORDER_PRE_2\")"]},"id":"Shortcut_to_ALLIVET_DAILY_ORDER_PRE","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Qualifier","label":"SQ_Shortcut_to_ALLIVET_DAILY_ORDER_PRE","queries":["df_3 = spark.sql(\"\"\"SELECT\n  ALLIVET_ORDER_CODE AS ALLIVET_ORDER_CODE,\n  ALLIVET_ORDER_LINE_NUMBER AS ALLIVET_ORDER_LINE_NUMBER,\n  ALLIVET_ORDER_DATE AS ALLIVET_ORDER_DATE,\n  PETSMART_ORDER_DATE AS PETSMART_ORDER_DATE,\n  ORDER_STATUS AS ORDER_STATUS,\n  PETSMART_ORDER_CODE AS PETSMART_ORDER_CODE,\n  SUB_TOTAL AS SUB_TOTAL,\n  FREIGHT AS FREIGHT,\n  TOTAL AS TOTAL,\n  SHIPPING_METHOD_CODE AS SHIPPING_METHOD_CODE,\n  IS_ORDER_VOIDED AS IS_ORDER_VOIDED,\n  IS_ORDER_ONHOLD AS IS_ORDER_ONHOLD,\n  ORDER_CREATED_DATE AS ORDER_CREATED_DATE,\n  ORDER_MODIFIED_DATE AS ORDER_MODIFIED_DATE,\n  SHIPPED_DATE AS SHIPPED_DATE,\n  IS_ORDER_SHIPPED AS IS_ORDER_SHIPPED,\n  INTERNAL_NOTES AS INTERNAL_NOTES,\n  PUBLIC_NOTES AS PUBLIC_NOTES,\n  AUTOSHIP_DISCOUNT_AMOUNT AS AUTOSHIP_DISCOUNT_AMOUNT,\n  ORDER_MERCHANT_NOTES AS ORDER_MERCHANT_NOTES,\n  IS_RISKORDER AS IS_RISKORDER,\n  RISK_REASONS AS RISK_REASONS,\n  ORIGINAL_SHIPPING_METHOD_CODE AS ORIGINAL_SHIPPING_METHOD_CODE,\n  IS_SHIPHOLD AS IS_SHIPHOLD,\n  SHIPHOLD_DATE AS SHIPHOLD_DATE,\n  SHIPRELEASED_DATE AS SHIPRELEASED_DATE,\n  ALLIVET_SKU AS ALLIVET_SKU,\n  PETSMART_SKU AS PETSMART_SKU,\n  ORDERED_QUANTITY AS ORDERED_QUANTITY,\n  ITEM_DESCRIPTION AS ITEM_DESCRIPTION,\n  EXT_PRICE AS EXT_PRICE,\n  ORDER_DETAIL_CREATED_DATE AS ORDER_DETAIL_CREATED_DATE,\n  ORDER_DETAIL_MODIFIED_DATE AS ORDER_DETAIL_MODIFIED_DATE,\n  HOW_TO_GET_RX AS HOW_TO_GET_RX,\n  VET_CODE AS VET_CODE,\n  PET_CODE AS PET_CODE,\n  IS_ORDER_DETAIL_ONHOLD AS IS_ORDER_DETAIL_ONHOLD,\n  IS_ONHOLD_TOFILL AS IS_ONHOLD_TOFILL,\n  LOAD_TSTMP AS LOAD_TSTMP,\n  monotonically_increasing_id() AS Monotonically_Increasing_Id\nFROM\n  Shortcut_to_ALLIVET_DAILY_ORDER_PRE_2\"\"\")","df_3.createOrReplaceTempView(\"SQ_Shortcut_to_ALLIVET_DAILY_ORDER_PRE_3\")"]},"id":"SQ_Shortcut_to_ALLIVET_DAILY_ORDER_PRE","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"Shortcut_to_SKU_PROFILE","queries":["df_4 = spark.sql(\"\"\"SELECT\n  PRODUCT_ID AS PRODUCT_ID,\n  SKU_NBR AS SKU_NBR,\n  SKU_TYPE AS SKU_TYPE,\n  PRIMARY_UPC_ID AS PRIMARY_UPC_ID,\n  STATUS_ID AS STATUS_ID,\n  SUBS_HIST_FLAG AS SUBS_HIST_FLAG,\n  SUBS_CURR_FLAG AS SUBS_CURR_FLAG,\n  SKU_DESC AS SKU_DESC,\n  ALT_DESC AS ALT_DESC,\n  SAP_CATEGORY_ID AS SAP_CATEGORY_ID,\n  SAP_CLASS_ID AS SAP_CLASS_ID,\n  SAP_DEPT_ID AS SAP_DEPT_ID,\n  SAP_DIVISION_ID AS SAP_DIVISION_ID,\n  PRIMARY_VENDOR_ID AS PRIMARY_VENDOR_ID,\n  PARENT_VENDOR_ID AS PARENT_VENDOR_ID,\n  COUNTRY_CD AS COUNTRY_CD,\n  IMPORT_FLAG AS IMPORT_FLAG,\n  HTS_CODE_ID AS HTS_CODE_ID,\n  CONTENTS AS CONTENTS,\n  CONTENTS_UNITS AS CONTENTS_UNITS,\n  WEIGHT_NET_AMT AS WEIGHT_NET_AMT,\n  WEIGHT_UOM_CD AS WEIGHT_UOM_CD,\n  SIZE_DESC AS SIZE_DESC,\n  BUM_QTY AS BUM_QTY,\n  UOM_CD AS UOM_CD,\n  UNIT_NUMERATOR AS UNIT_NUMERATOR,\n  UNIT_DENOMINATOR AS UNIT_DENOMINATOR,\n  BUYER_ID AS BUYER_ID,\n  PURCH_GROUP_ID AS PURCH_GROUP_ID,\n  PURCH_COST_AMT AS PURCH_COST_AMT,\n  NAT_PRICE_US_AMT AS NAT_PRICE_US_AMT,\n  TAX_CLASS_ID AS TAX_CLASS_ID,\n  VALUATION_CLASS_CD AS VALUATION_CLASS_CD,\n  BRAND_CD AS BRAND_CD,\n  BRAND_CLASSIFICATION_ID AS BRAND_CLASSIFICATION_ID,\n  OWNBRAND_FLAG AS OWNBRAND_FLAG,\n  STATELINE_FLAG AS STATELINE_FLAG,\n  SIGN_TYPE_CD AS SIGN_TYPE_CD,\n  OLD_ARTICLE_NBR AS OLD_ARTICLE_NBR,\n  VENDOR_ARTICLE_NBR AS VENDOR_ARTICLE_NBR,\n  INIT_MKDN_DT AS INIT_MKDN_DT,\n  DISC_START_DT AS DISC_START_DT,\n  ADD_DT AS ADD_DT,\n  DELETE_DT AS DELETE_DT,\n  UPDATE_DT AS UPDATE_DT,\n  FIRST_SALE_DT AS FIRST_SALE_DT,\n  LAST_SALE_DT AS LAST_SALE_DT,\n  FIRST_INV_DT AS FIRST_INV_DT,\n  LAST_INV_DT AS LAST_INV_DT,\n  LOAD_DT AS LOAD_DT,\n  BASE_NBR AS BASE_NBR,\n  BP_COLOR_ID AS BP_COLOR_ID,\n  BP_SIZE_ID AS BP_SIZE_ID,\n  BP_BREED_ID AS BP_BREED_ID,\n  BP_ITEM_CONCATENATED AS BP_ITEM_CONCATENATED,\n  BP_AEROSOL_FLAG AS BP_AEROSOL_FLAG,\n  BP_HAZMAT_FLAG AS BP_HAZMAT_FLAG,\n  CANADIAN_HTS_CD AS CANADIAN_HTS_CD,\n  NAT_PRICE_CA_AMT AS NAT_PRICE_CA_AMT,\n  NAT_PRICE_PR_AMT AS NAT_PRICE_PR_AMT,\n  RTV_DEPT_CD AS RTV_DEPT_CD,\n  GL_ACCT_NBR AS GL_ACCT_NBR,\n  ARTICLE_CATEGORY_ID AS ARTICLE_CATEGORY_ID,\n  COMPONENT_FLAG AS COMPONENT_FLAG,\n  ZDISCO_SCHED_TYPE_ID AS ZDISCO_SCHED_TYPE_ID,\n  ZDISCO_MKDN_SCHED_ID AS ZDISCO_MKDN_SCHED_ID,\n  ZDISCO_PID_DT AS ZDISCO_PID_DT,\n  ZDISCO_START_DT AS ZDISCO_START_DT,\n  ZDISCO_INIT_MKDN_DT AS ZDISCO_INIT_MKDN_DT,\n  ZDISCO_DC_DT AS ZDISCO_DC_DT,\n  ZDISCO_STR_DT AS ZDISCO_STR_DT,\n  ZDISCO_STR_OWNRSHP_DT AS ZDISCO_STR_OWNRSHP_DT,\n  ZDISCO_STR_WRT_OFF_DT AS ZDISCO_STR_WRT_OFF_DT\nFROM\n  SKU_PROFILE\"\"\")","df_4.createOrReplaceTempView(\"Shortcut_to_SKU_PROFILE_4\")"]},"id":"Shortcut_to_SKU_PROFILE","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Qualifier","label":"SQ_Shortcut_to_SKU_PROFILE","queries":["df_5 = spark.sql(\"\"\"SELECT\n  PRODUCT_ID AS PRODUCT_ID,\n  SKU_NBR AS SKU_NBR,\n  SKU_TYPE AS SKU_TYPE,\n  PRIMARY_UPC_ID AS PRIMARY_UPC_ID,\n  STATUS_ID AS STATUS_ID,\n  SUBS_HIST_FLAG AS SUBS_HIST_FLAG,\n  SUBS_CURR_FLAG AS SUBS_CURR_FLAG,\n  SKU_DESC AS SKU_DESC,\n  ALT_DESC AS ALT_DESC,\n  SAP_CATEGORY_ID AS SAP_CATEGORY_ID,\n  SAP_CLASS_ID AS SAP_CLASS_ID,\n  SAP_DEPT_ID AS SAP_DEPT_ID,\n  SAP_DIVISION_ID AS SAP_DIVISION_ID,\n  PRIMARY_VENDOR_ID AS PRIMARY_VENDOR_ID,\n  PARENT_VENDOR_ID AS PARENT_VENDOR_ID,\n  COUNTRY_CD AS COUNTRY_CD,\n  IMPORT_FLAG AS IMPORT_FLAG,\n  HTS_CODE_ID AS HTS_CODE_ID,\n  CONTENTS AS CONTENTS,\n  CONTENTS_UNITS AS CONTENTS_UNITS,\n  WEIGHT_NET_AMT AS WEIGHT_NET_AMT,\n  WEIGHT_UOM_CD AS WEIGHT_UOM_CD,\n  SIZE_DESC AS SIZE_DESC,\n  BUM_QTY AS BUM_QTY,\n  UOM_CD AS UOM_CD,\n  UNIT_NUMERATOR AS UNIT_NUMERATOR,\n  UNIT_DENOMINATOR AS UNIT_DENOMINATOR,\n  BUYER_ID AS BUYER_ID,\n  PURCH_GROUP_ID AS PURCH_GROUP_ID,\n  PURCH_COST_AMT AS PURCH_COST_AMT,\n  NAT_PRICE_US_AMT AS NAT_PRICE_US_AMT,\n  TAX_CLASS_ID AS TAX_CLASS_ID,\n  VALUATION_CLASS_CD AS VALUATION_CLASS_CD,\n  BRAND_CD AS BRAND_CD,\n  BRAND_CLASSIFICATION_ID AS BRAND_CLASSIFICATION_ID,\n  OWNBRAND_FLAG AS OWNBRAND_FLAG,\n  STATELINE_FLAG AS STATELINE_FLAG,\n  SIGN_TYPE_CD AS SIGN_TYPE_CD,\n  OLD_ARTICLE_NBR AS OLD_ARTICLE_NBR,\n  VENDOR_ARTICLE_NBR AS VENDOR_ARTICLE_NBR,\n  INIT_MKDN_DT AS INIT_MKDN_DT,\n  DISC_START_DT AS DISC_START_DT,\n  ADD_DT AS ADD_DT,\n  DELETE_DT AS DELETE_DT,\n  UPDATE_DT AS UPDATE_DT,\n  FIRST_SALE_DT AS FIRST_SALE_DT,\n  LAST_SALE_DT AS LAST_SALE_DT,\n  FIRST_INV_DT AS FIRST_INV_DT,\n  LAST_INV_DT AS LAST_INV_DT,\n  LOAD_DT AS LOAD_DT,\n  BASE_NBR AS BASE_NBR,\n  BP_COLOR_ID AS BP_COLOR_ID,\n  BP_SIZE_ID AS BP_SIZE_ID,\n  BP_BREED_ID AS BP_BREED_ID,\n  BP_ITEM_CONCATENATED AS BP_ITEM_CONCATENATED,\n  BP_AEROSOL_FLAG AS BP_AEROSOL_FLAG,\n  BP_HAZMAT_FLAG AS BP_HAZMAT_FLAG,\n  CANADIAN_HTS_CD AS CANADIAN_HTS_CD,\n  NAT_PRICE_CA_AMT AS NAT_PRICE_CA_AMT,\n  NAT_PRICE_PR_AMT AS NAT_PRICE_PR_AMT,\n  RTV_DEPT_CD AS RTV_DEPT_CD,\n  GL_ACCT_NBR AS GL_ACCT_NBR,\n  ARTICLE_CATEGORY_ID AS ARTICLE_CATEGORY_ID,\n  COMPONENT_FLAG AS COMPONENT_FLAG,\n  ZDISCO_SCHED_TYPE_ID AS ZDISCO_SCHED_TYPE_ID,\n  ZDISCO_MKDN_SCHED_ID AS ZDISCO_MKDN_SCHED_ID,\n  ZDISCO_PID_DT AS ZDISCO_PID_DT,\n  ZDISCO_START_DT AS ZDISCO_START_DT,\n  ZDISCO_INIT_MKDN_DT AS ZDISCO_INIT_MKDN_DT,\n  ZDISCO_DC_DT AS ZDISCO_DC_DT,\n  ZDISCO_STR_DT AS ZDISCO_STR_DT,\n  ZDISCO_STR_OWNRSHP_DT AS ZDISCO_STR_OWNRSHP_DT,\n  ZDISCO_STR_WRT_OFF_DT AS ZDISCO_STR_WRT_OFF_DT,\n  monotonically_increasing_id() AS Monotonically_Increasing_Id\nFROM\n  Shortcut_to_SKU_PROFILE_4\"\"\")","df_5.createOrReplaceTempView(\"SQ_Shortcut_to_SKU_PROFILE_5\")"]},"id":"SQ_Shortcut_to_SKU_PROFILE","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Joiner","label":"Jnr_Sku_Profile","queries":["df_6 = spark.sql(\"\"\"SELECT\n  DETAIL.ALLIVET_ORDER_CODE AS ALLIVET_ORDER_CODE,\n  DETAIL.ALLIVET_ORDER_LINE_NUMBER AS ALLIVET_ORDER_LINE_NUMBER,\n  DETAIL.ALLIVET_ORDER_DATE AS ALLIVET_ORDER_DATE,\n  DETAIL.PETSMART_ORDER_DATE AS PETSMART_ORDER_DATE,\n  DETAIL.ORDER_STATUS AS ORDER_STATUS,\n  DETAIL.PETSMART_ORDER_CODE AS PETSMART_ORDER_CODE,\n  DETAIL.SUB_TOTAL AS SUB_TOTAL,\n  DETAIL.FREIGHT AS FREIGHT,\n  DETAIL.TOTAL AS TOTAL,\n  DETAIL.SHIPPING_METHOD_CODE AS SHIPPING_METHOD_CODE,\n  DETAIL.IS_ORDER_VOIDED AS IS_ORDER_VOIDED,\n  DETAIL.IS_ORDER_ONHOLD AS IS_ORDER_ONHOLD,\n  DETAIL.ORDER_CREATED_DATE AS ORDER_CREATED_DATE,\n  DETAIL.ORDER_MODIFIED_DATE AS ORDER_MODIFIED_DATE,\n  DETAIL.SHIPPED_DATE AS SHIPPED_DATE,\n  DETAIL.IS_ORDER_SHIPPED AS IS_ORDER_SHIPPED,\n  DETAIL.INTERNAL_NOTES AS INTERNAL_NOTES,\n  DETAIL.PUBLIC_NOTES AS PUBLIC_NOTES,\n  DETAIL.AUTOSHIP_DISCOUNT_AMOUNT AS AUTOSHIP_DISCOUNT_AMOUNT,\n  DETAIL.ORDER_MERCHANT_NOTES AS ORDER_MERCHANT_NOTES,\n  DETAIL.IS_RISKORDER AS IS_RISKORDER,\n  DETAIL.RISK_REASONS AS RISK_REASONS,\n  DETAIL.ORIGINAL_SHIPPING_METHOD_CODE AS ORIGINAL_SHIPPING_METHOD_CODE,\n  DETAIL.IS_SHIPHOLD AS IS_SHIPHOLD,\n  DETAIL.SHIPHOLD_DATE AS SHIPHOLD_DATE,\n  DETAIL.SHIPRELEASED_DATE AS SHIPRELEASED_DATE,\n  DETAIL.ALLIVET_SKU AS ALLIVET_SKU,\n  DETAIL.PETSMART_SKU AS PETSMART_SKU,\n  DETAIL.ORDERED_QUANTITY AS ORDERED_QUANTITY,\n  DETAIL.ITEM_DESCRIPTION AS ITEM_DESCRIPTION,\n  DETAIL.EXT_PRICE AS EXT_PRICE,\n  DETAIL.ORDER_DETAIL_CREATED_DATE AS ORDER_DETAIL_CREATED_DATE,\n  DETAIL.ORDER_DETAIL_MODIFIED_DATE AS ORDER_DETAIL_MODIFIED_DATE,\n  DETAIL.HOW_TO_GET_RX AS HOW_TO_GET_RX,\n  DETAIL.VET_CODE AS VET_CODE,\n  DETAIL.PET_CODE AS PET_CODE,\n  DETAIL.IS_ORDER_DETAIL_ONHOLD AS IS_ORDER_DETAIL_ONHOLD,\n  DETAIL.IS_ONHOLD_TOFILL AS IS_ONHOLD_TOFILL,\n  DETAIL.LOAD_TSTMP AS LOAD_TSTMP,\n  MASTER.PRODUCT_ID AS PRODUCT_ID,\n  MASTER.SKU_NBR AS SKU_NBR,\n  DETAIL.Monotonically_Increasing_Id AS Monotonically_Increasing_Id\nFROM\n  SQ_Shortcut_to_SKU_PROFILE_5 MASTER\n  RIGHT JOIN SQ_Shortcut_to_ALLIVET_DAILY_ORDER_PRE_3 DETAIL ON MASTER.SKU_NBR = DETAIL.PETSMART_SKU\"\"\")","df_6.createOrReplaceTempView(\"Jnr_Sku_Profile_6\")"]},"id":"Jnr_Sku_Profile","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Joiner","label":"Jnr_Order_Day","queries":["df_7 = spark.sql(\"\"\"SELECT\n  DETAIL.ALLIVET_ORDER_CODE AS ALLIVET_ORDER_CODE,\n  DETAIL.ALLIVET_ORDER_LINE_NUMBER AS ALLIVET_ORDER_LINE_NUMBER,\n  DETAIL.ALLIVET_ORDER_DATE AS ALLIVET_ORDER_DATE,\n  DETAIL.PETSMART_ORDER_DATE AS PETSMART_ORDER_DATE,\n  DETAIL.ORDER_STATUS AS ORDER_STATUS,\n  DETAIL.PETSMART_ORDER_CODE AS PETSMART_ORDER_CODE,\n  DETAIL.SUB_TOTAL AS SUB_TOTAL,\n  DETAIL.FREIGHT AS FREIGHT,\n  DETAIL.TOTAL AS TOTAL,\n  DETAIL.SHIPPING_METHOD_CODE AS SHIPPING_METHOD_CODE,\n  DETAIL.IS_ORDER_VOIDED AS IS_ORDER_VOIDED,\n  DETAIL.IS_ORDER_ONHOLD AS IS_ORDER_ONHOLD,\n  DETAIL.ORDER_CREATED_DATE AS ORDER_CREATED_DATE,\n  DETAIL.ORDER_MODIFIED_DATE AS ORDER_MODIFIED_DATE,\n  DETAIL.SHIPPED_DATE AS SHIPPED_DATE,\n  DETAIL.IS_ORDER_SHIPPED AS IS_ORDER_SHIPPED,\n  DETAIL.INTERNAL_NOTES AS INTERNAL_NOTES,\n  DETAIL.PUBLIC_NOTES AS PUBLIC_NOTES,\n  DETAIL.AUTOSHIP_DISCOUNT_AMOUNT AS AUTOSHIP_DISCOUNT_AMOUNT,\n  DETAIL.ORDER_MERCHANT_NOTES AS ORDER_MERCHANT_NOTES,\n  DETAIL.IS_RISKORDER AS IS_RISKORDER,\n  DETAIL.RISK_REASONS AS RISK_REASONS,\n  DETAIL.ORIGINAL_SHIPPING_METHOD_CODE AS ORIGINAL_SHIPPING_METHOD_CODE,\n  DETAIL.IS_SHIPHOLD AS IS_SHIPHOLD,\n  DETAIL.SHIPHOLD_DATE AS SHIPHOLD_DATE,\n  DETAIL.SHIPRELEASED_DATE AS SHIPRELEASED_DATE,\n  DETAIL.ALLIVET_SKU AS ALLIVET_SKU,\n  DETAIL.PETSMART_SKU AS PETSMART_SKU,\n  DETAIL.ORDERED_QUANTITY AS ORDERED_QUANTITY,\n  DETAIL.ITEM_DESCRIPTION AS ITEM_DESCRIPTION,\n  DETAIL.EXT_PRICE AS EXT_PRICE,\n  DETAIL.ORDER_DETAIL_CREATED_DATE AS ORDER_DETAIL_CREATED_DATE,\n  DETAIL.ORDER_DETAIL_MODIFIED_DATE AS ORDER_DETAIL_MODIFIED_DATE,\n  DETAIL.HOW_TO_GET_RX AS HOW_TO_GET_RX,\n  DETAIL.VET_CODE AS VET_CODE,\n  DETAIL.PET_CODE AS PET_CODE,\n  DETAIL.IS_ORDER_DETAIL_ONHOLD AS IS_ORDER_DETAIL_ONHOLD,\n  DETAIL.IS_ONHOLD_TOFILL AS IS_ONHOLD_TOFILL,\n  DETAIL.LOAD_TSTMP AS LOAD_TSTMP,\n  DETAIL.PRODUCT_ID AS PRODUCT_ID,\n  MASTER.ALLIVET_ORDER_DT AS Lkp_ALLIVET_ORDER_DT,\n  MASTER.ALLIVET_ORDER_NBR AS Lkp_ALLIVET_ORDER_NBR,\n  MASTER.ALLIVET_ORDER_LN_NBR AS Lkp_ALLIVET_ORDER_LN_NBR,\n  MASTER.ORDER_CREATED_DT AS Lkp_ORDER_CREATED_DT,\n  MASTER.ORDER_MODIFIED_DT AS Lkp_ORDER_MODIFIED_DT,\n  MASTER.ORDER_DETAIL_CREATED_DT AS Lkp_ORDER_DETAIL_CREATED_DT,\n  MASTER.ORDER_DETAIL_MODIFIED_DT AS Lkp_ORDER_DETAIL_MODIFIED_DT,\n  DETAIL.Monotonically_Increasing_Id AS Monotonically_Increasing_Id\nFROM\n  SQ_Shortcut_to_ALLIVET_ORDER_DAY_1 MASTER\n  RIGHT JOIN Jnr_Sku_Profile_6 DETAIL ON MASTER.ALLIVET_ORDER_NBR = DETAIL.ALLIVET_ORDER_CODE\n  AND MASTER.ALLIVET_ORDER_LN_NBR = DETAIL.ALLIVET_ORDER_LINE_NUMBER\"\"\")","df_7.createOrReplaceTempView(\"Jnr_Order_Day_7\")"]},"id":"Jnr_Order_Day","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Expression","label":"Exp_Update_Flag","queries":["df_8 = spark.sql(\"\"\"SELECT\n  ALLIVET_ORDER_CODE AS ALLIVET_ORDER_CODE,\n  ALLIVET_ORDER_LINE_NUMBER AS ALLIVET_ORDER_LINE_NUMBER,\n  ALLIVET_ORDER_DATE AS ALLIVET_ORDER_DATE,\n  PETSMART_ORDER_DATE AS PETSMART_ORDER_DATE,\n  ORDER_STATUS AS ORDER_STATUS,\n  PETSMART_ORDER_CODE AS PETSMART_ORDER_CODE,\n  SUB_TOTAL AS SUB_TOTAL,\n  FREIGHT AS FREIGHT,\n  TOTAL AS TOTAL,\n  SHIPPING_METHOD_CODE AS SHIPPING_METHOD_CODE,\n  IS_ORDER_VOIDED AS IS_ORDER_VOIDED,\n  IS_ORDER_ONHOLD AS IS_ORDER_ONHOLD,\n  ORDER_CREATED_DATE AS ORDER_CREATED_DATE,\n  ORDER_MODIFIED_DATE AS ORDER_MODIFIED_DATE,\n  SHIPPED_DATE AS SHIPPED_DATE,\n  IS_ORDER_SHIPPED AS IS_ORDER_SHIPPED,\n  INTERNAL_NOTES AS INTERNAL_NOTES,\n  PUBLIC_NOTES AS PUBLIC_NOTES,\n  AUTOSHIP_DISCOUNT_AMOUNT AS AUTOSHIP_DISCOUNT_AMOUNT,\n  ORDER_MERCHANT_NOTES AS ORDER_MERCHANT_NOTES,\n  IS_RISKORDER AS IS_RISKORDER,\n  RISK_REASONS AS RISK_REASONS,\n  ORIGINAL_SHIPPING_METHOD_CODE AS ORIGINAL_SHIPPING_METHOD_CODE,\n  IS_SHIPHOLD AS IS_SHIPHOLD,\n  SHIPHOLD_DATE AS SHIPHOLD_DATE,\n  SHIPRELEASED_DATE AS SHIPRELEASED_DATE,\n  ALLIVET_SKU AS ALLIVET_SKU,\n  PETSMART_SKU AS PETSMART_SKU,\n  ORDERED_QUANTITY AS ORDERED_QUANTITY,\n  ITEM_DESCRIPTION AS ITEM_DESCRIPTION,\n  EXT_PRICE AS EXT_PRICE,\n  ORDER_DETAIL_CREATED_DATE AS ORDER_DETAIL_CREATED_DATE,\n  ORDER_DETAIL_MODIFIED_DATE AS ORDER_DETAIL_MODIFIED_DATE,\n  HOW_TO_GET_RX AS HOW_TO_GET_RX,\n  VET_CODE AS VET_CODE,\n  PET_CODE AS PET_CODE,\n  IS_ORDER_DETAIL_ONHOLD AS IS_ORDER_DETAIL_ONHOLD,\n  IS_ONHOLD_TOFILL AS IS_ONHOLD_TOFILL,\n  LOAD_TSTMP AS LOAD_TSTMP,\n  PRODUCT_ID AS PRODUCT_ID,\n  SYSDATE AS UPDATE_TSTMP,\n  IIF(\n    (\n      ISNULL(Lkp_ALLIVET_ORDER_NBR)\n      OR ISNULL(Lkp_ALLIVET_ORDER_LN_NBR)\n    ),\n    1,\n    IIF (\n      NOT (\n        ISNULL(Lkp_ALLIVET_ORDER_NBR)\n        OR ISNULL(Lkp_ALLIVET_ORDER_LN_NBR)\n      )\n      AND (\n        IIF(\n          ISNULL(ORDER_CREATED_DATE),\n          TO_DATE('9999-12-31', 'YYYY-MM-DD'),\n          ORDER_CREATED_DATE\n        ) <> IIF(\n          ISNULL(Lkp_ORDER_CREATED_DT),\n          TO_DATE('9999-12-31', 'YYYY-MM-DD'),\n          Lkp_ORDER_CREATED_DT\n        )\n        OR IIF(\n          ISNULL(ORDER_MODIFIED_DATE),\n          TO_DATE('9999-12-31', 'YYYY-MM-DD'),\n          ORDER_MODIFIED_DATE\n        ) <> IIF(\n          ISNULL(Lkp_ORDER_MODIFIED_DT),\n          TO_DATE('9999-12-31', 'YYYY-MM-DD'),\n          Lkp_ORDER_MODIFIED_DT\n        )\n        OR IIF(\n          ISNULL(ORDER_DETAIL_CREATED_DATE),\n          TO_DATE('9999-12-31', 'YYYY-MM-DD'),\n          ORDER_DETAIL_CREATED_DATE\n        ) <> IIF(\n          ISNULL(Lkp_ORDER_DETAIL_CREATED_DT),\n          TO_DATE('9999-12-31', 'YYYY-MM-DD'),\n          Lkp_ORDER_DETAIL_CREATED_DT\n        )\n        OR IIF(\n          ISNULL(ORDER_DETAIL_MODIFIED_DATE),\n          TO_DATE('9999-12-31', 'YYYY-MM-DD'),\n          ORDER_DETAIL_MODIFIED_DATE\n        ) <> IIF(\n          ISNULL(Lkp_ORDER_DETAIL_MODIFIED_DT),\n          TO_DATE('9999-12-31', 'YYYY-MM-DD'),\n          Lkp_ORDER_DETAIL_MODIFIED_DT\n        )\n      ),\n      2,\n      0\n    )\n  ) AS UPDATE_FLAG,\n  Monotonically_Increasing_Id AS Monotonically_Increasing_Id\nFROM\n  Jnr_Order_Day_7\"\"\")","df_8.createOrReplaceTempView(\"Exp_Update_Flag_8\")"]},"id":"Exp_Update_Flag","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Filter","label":"Fil_Update_Insert","queries":["df_9 = spark.sql(\"\"\"SELECT\n  ALLIVET_ORDER_CODE AS ALLIVET_ORDER_CODE,\n  ALLIVET_ORDER_LINE_NUMBER AS ALLIVET_ORDER_LINE_NUMBER,\n  ALLIVET_ORDER_DATE AS ALLIVET_ORDER_DATE,\n  PETSMART_ORDER_DATE AS PETSMART_ORDER_DATE,\n  ORDER_STATUS AS ORDER_STATUS,\n  PETSMART_ORDER_CODE AS PETSMART_ORDER_CODE,\n  SUB_TOTAL AS SUB_TOTAL,\n  FREIGHT AS FREIGHT,\n  TOTAL AS TOTAL,\n  SHIPPING_METHOD_CODE AS SHIPPING_METHOD_CODE,\n  IS_ORDER_VOIDED AS IS_ORDER_VOIDED,\n  IS_ORDER_ONHOLD AS IS_ORDER_ONHOLD,\n  ORDER_CREATED_DATE AS ORDER_CREATED_DATE,\n  ORDER_MODIFIED_DATE AS ORDER_MODIFIED_DATE,\n  SHIPPED_DATE AS SHIPPED_DATE,\n  IS_ORDER_SHIPPED AS IS_ORDER_SHIPPED,\n  INTERNAL_NOTES AS INTERNAL_NOTES,\n  PUBLIC_NOTES AS PUBLIC_NOTES,\n  AUTOSHIP_DISCOUNT_AMOUNT AS AUTOSHIP_DISCOUNT_AMOUNT,\n  ORDER_MERCHANT_NOTES AS ORDER_MERCHANT_NOTES,\n  IS_RISKORDER AS IS_RISKORDER,\n  RISK_REASONS AS RISK_REASONS,\n  ORIGINAL_SHIPPING_METHOD_CODE AS ORIGINAL_SHIPPING_METHOD_CODE,\n  IS_SHIPHOLD AS IS_SHIPHOLD,\n  SHIPHOLD_DATE AS SHIPHOLD_DATE,\n  SHIPRELEASED_DATE AS SHIPRELEASED_DATE,\n  ALLIVET_SKU AS ALLIVET_SKU,\n  PETSMART_SKU AS PETSMART_SKU,\n  ORDERED_QUANTITY AS ORDERED_QUANTITY,\n  ITEM_DESCRIPTION AS ITEM_DESCRIPTION,\n  EXT_PRICE AS EXT_PRICE,\n  ORDER_DETAIL_CREATED_DATE AS ORDER_DETAIL_CREATED_DATE,\n  ORDER_DETAIL_MODIFIED_DATE AS ORDER_DETAIL_MODIFIED_DATE,\n  HOW_TO_GET_RX AS HOW_TO_GET_RX,\n  VET_CODE AS VET_CODE,\n  PET_CODE AS PET_CODE,\n  IS_ORDER_DETAIL_ONHOLD AS IS_ORDER_DETAIL_ONHOLD,\n  IS_ONHOLD_TOFILL AS IS_ONHOLD_TOFILL,\n  LOAD_TSTMP AS LOAD_TSTMP,\n  PRODUCT_ID AS PRODUCT_ID,\n  UPDATE_TSTMP AS UPDATE_TSTMP,\n  UPDATE_FLAG AS UPDATE_FLAG,\n  Monotonically_Increasing_Id AS Monotonically_Increasing_Id\nFROM\n  Exp_Update_Flag_8\nWHERE\n  IN(UPDATE_FLAG, 1, 2)\"\"\")","df_9.createOrReplaceTempView(\"Fil_Update_Insert_9\")"]},"id":"Fil_Update_Insert","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Update Strategy","label":"UPDTRANS","queries":["df_10 = spark.sql(\"\"\"SELECT\n  ALLIVET_ORDER_CODE AS ALLIVET_ORDER_CODE,\n  ALLIVET_ORDER_LINE_NUMBER AS ALLIVET_ORDER_LINE_NUMBER,\n  ALLIVET_ORDER_DATE AS ALLIVET_ORDER_DATE,\n  PETSMART_ORDER_DATE AS PETSMART_ORDER_DATE,\n  ORDER_STATUS AS ORDER_STATUS,\n  PETSMART_ORDER_CODE AS PETSMART_ORDER_CODE,\n  SUB_TOTAL AS SUB_TOTAL,\n  FREIGHT AS FREIGHT,\n  TOTAL AS TOTAL,\n  SHIPPING_METHOD_CODE AS SHIPPING_METHOD_CODE,\n  IS_ORDER_VOIDED AS IS_ORDER_VOIDED,\n  IS_ORDER_ONHOLD AS IS_ORDER_ONHOLD,\n  ORDER_CREATED_DATE AS ORDER_CREATED_DATE,\n  ORDER_MODIFIED_DATE AS ORDER_MODIFIED_DATE,\n  SHIPPED_DATE AS SHIPPED_DATE,\n  IS_ORDER_SHIPPED AS IS_ORDER_SHIPPED,\n  INTERNAL_NOTES AS INTERNAL_NOTES,\n  PUBLIC_NOTES AS PUBLIC_NOTES,\n  AUTOSHIP_DISCOUNT_AMOUNT AS AUTOSHIP_DISCOUNT_AMOUNT,\n  ORDER_MERCHANT_NOTES AS ORDER_MERCHANT_NOTES,\n  IS_RISKORDER AS IS_RISKORDER,\n  RISK_REASONS AS RISK_REASONS,\n  ORIGINAL_SHIPPING_METHOD_CODE AS ORIGINAL_SHIPPING_METHOD_CODE,\n  IS_SHIPHOLD AS IS_SHIPHOLD,\n  SHIPHOLD_DATE AS SHIPHOLD_DATE,\n  SHIPRELEASED_DATE AS SHIPRELEASED_DATE,\n  ALLIVET_SKU AS ALLIVET_SKU,\n  PETSMART_SKU AS PETSMART_SKU,\n  ORDERED_QUANTITY AS ORDERED_QUANTITY,\n  ITEM_DESCRIPTION AS ITEM_DESCRIPTION,\n  EXT_PRICE AS EXT_PRICE,\n  ORDER_DETAIL_CREATED_DATE AS ORDER_DETAIL_CREATED_DATE,\n  ORDER_DETAIL_MODIFIED_DATE AS ORDER_DETAIL_MODIFIED_DATE,\n  HOW_TO_GET_RX AS HOW_TO_GET_RX,\n  VET_CODE AS VET_CODE,\n  PET_CODE AS PET_CODE,\n  IS_ORDER_DETAIL_ONHOLD AS IS_ORDER_DETAIL_ONHOLD,\n  IS_ONHOLD_TOFILL AS IS_ONHOLD_TOFILL,\n  LOAD_TSTMP AS LOAD_TSTMP,\n  PRODUCT_ID AS PRODUCT_ID,\n  UPDATE_TSTMP AS UPDATE_TSTMP,\n  UPDATE_FLAG AS UPDATE_FLAG,\n  Monotonically_Increasing_Id AS Monotonically_Increasing_Id,\n  DECODE(UPDATE_FLAG, 1, 'DD_INSERT', 2, 'DD_UPDATE') AS UPDATE_STRATEGY_FLAG\nFROM\n  Fil_Update_Insert_9\"\"\")","df_10.createOrReplaceTempView(\"UPDTRANS_10\")"]},"id":"UPDTRANS","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Target Definition","label":"Shortcut_to_ALLIVET_ORDER_DAY1","queries":["spark.sql(\"\"\"MERGE INTO ALLIVET_ORDER_DAY_v2_test__ AS TARGET\nUSING\n  UPDTRANS_10 AS SOURCE ON TARGET.ALLIVET_ORDER_LN_NBR_v2_test__ = SOURCE.ALLIVET_ORDER_LINE_NUMBER\n  AND TARGET.ALLIVET_ORDER_NBR_v2_test__ = SOURCE.ALLIVET_ORDER_CODE\n  WHEN MATCHED\n  AND SOURCE.UPDATE_STRATEGY_FLAG = \"DD_UPDATE\" THEN\nUPDATE\nSET\n  TARGET.ALLIVET_ORDER_NBR_v2_test__ = SOURCE.ALLIVET_ORDER_CODE,\n  TARGET.ALLIVET_ORDER_LN_NBR_v2_test__ = SOURCE.ALLIVET_ORDER_LINE_NUMBER,\n  TARGET.ALLIVET_ORDER_DT = SOURCE.ALLIVET_ORDER_DATE,\n  TARGET.PETSMART_ORDER_DT = SOURCE.PETSMART_ORDER_DATE,\n  TARGET.ORDER_STATUS = SOURCE.ORDER_STATUS,\n  TARGET.PRODUCT_ID = SOURCE.PRODUCT_ID,\n  TARGET.PETSMART_ORDER_NBR = SOURCE.PETSMART_ORDER_CODE,\n  TARGET.PETSMART_SKU_NBR = SOURCE.PETSMART_SKU,\n  TARGET.ALLIVET_SKU_NBR = SOURCE.ALLIVET_SKU,\n  TARGET.SUB_TOTAL_AMT = SOURCE.SUB_TOTAL,\n  TARGET.FREIGHT_COST = SOURCE.FREIGHT,\n  TARGET.TOTAL_AMT = SOURCE.TOTAL,\n  TARGET.SHIP_METHOD_CD = SOURCE.SHIPPING_METHOD_CODE,\n  TARGET.ORDER_VOIDED_FLAG = SOURCE.IS_ORDER_VOIDED,\n  TARGET.ORDER_ONHOLD_FLAG = SOURCE.IS_ORDER_ONHOLD,\n  TARGET.ORDER_CREATED_DT = SOURCE.ORDER_CREATED_DATE,\n  TARGET.ORDER_MODIFIED_DT = SOURCE.ORDER_MODIFIED_DATE,\n  TARGET.SHIPPED_DT = SOURCE.SHIPPED_DATE,\n  TARGET.ORDER_SHIPPED_FLAG = SOURCE.IS_ORDER_SHIPPED,\n  TARGET.INTERNAL_NOTES = SOURCE.INTERNAL_NOTES,\n  TARGET.PUBLIC_NOTES = SOURCE.PUBLIC_NOTES,\n  TARGET.AUTOSHIP_DISCOUNT_AMT = SOURCE.AUTOSHIP_DISCOUNT_AMOUNT,\n  TARGET.ORDER_MERCHANT_NOTES = SOURCE.ORDER_MERCHANT_NOTES,\n  TARGET.RISKORDER_FLAG = SOURCE.IS_RISKORDER,\n  TARGET.RISK_REASON = SOURCE.RISK_REASONS,\n  TARGET.ORIG_SHIP_METHOD_CD = SOURCE.ORIGINAL_SHIPPING_METHOD_CODE,\n  TARGET.SHIP_HOLD_FLAG = SOURCE.IS_SHIPHOLD,\n  TARGET.SHIP_HOLD_DT = SOURCE.SHIPHOLD_DATE,\n  TARGET.SHIP_RELEASE_DT = SOURCE.SHIPRELEASED_DATE,\n  TARGET.ORDER_QTY = SOURCE.ORDERED_QUANTITY,\n  TARGET.ITEM_DESC = SOURCE.ITEM_DESCRIPTION,\n  TARGET.EXT_PRICE = SOURCE.EXT_PRICE,\n  TARGET.ORDER_DETAIL_CREATED_DT = SOURCE.ORDER_DETAIL_CREATED_DATE,\n  TARGET.ORDER_DETAIL_MODIFIED_DT = SOURCE.ORDER_DETAIL_MODIFIED_DATE,\n  TARGET.HOW_TO_GET_RX = SOURCE.HOW_TO_GET_RX,\n  TARGET.VET_CD = SOURCE.VET_CODE,\n  TARGET.PET_CD = SOURCE.PET_CODE,\n  TARGET.ORDER_DETAIL_ONHOLD_FLAG = SOURCE.IS_ORDER_DETAIL_ONHOLD,\n  TARGET.ONHOLD_TO_FILL_FLAG = SOURCE.IS_ONHOLD_TOFILL,\n  TARGET.UPDATE_TSTMP = SOURCE.UPDATE_TSTMP,\n  TARGET.LOAD_TSTMP = SOURCE.LOAD_TSTMP\n  WHEN MATCHED\n  AND SOURCE.UPDATE_STRATEGY_FLAG = \"DD_DELETE\"\n  AND TARGET.ALLIVET_ORDER_DT = SOURCE.ALLIVET_ORDER_DATE\n  AND TARGET.PETSMART_ORDER_DT = SOURCE.PETSMART_ORDER_DATE\n  AND TARGET.ORDER_STATUS = SOURCE.ORDER_STATUS\n  AND TARGET.PRODUCT_ID = SOURCE.PRODUCT_ID\n  AND TARGET.PETSMART_ORDER_NBR = SOURCE.PETSMART_ORDER_CODE\n  AND TARGET.PETSMART_SKU_NBR = SOURCE.PETSMART_SKU\n  AND TARGET.ALLIVET_SKU_NBR = SOURCE.ALLIVET_SKU\n  AND TARGET.SUB_TOTAL_AMT = SOURCE.SUB_TOTAL\n  AND TARGET.FREIGHT_COST = SOURCE.FREIGHT\n  AND TARGET.TOTAL_AMT = SOURCE.TOTAL\n  AND TARGET.SHIP_METHOD_CD = SOURCE.SHIPPING_METHOD_CODE\n  AND TARGET.ORDER_VOIDED_FLAG = SOURCE.IS_ORDER_VOIDED\n  AND TARGET.ORDER_ONHOLD_FLAG = SOURCE.IS_ORDER_ONHOLD\n  AND TARGET.ORDER_CREATED_DT = SOURCE.ORDER_CREATED_DATE\n  AND TARGET.ORDER_MODIFIED_DT = SOURCE.ORDER_MODIFIED_DATE\n  AND TARGET.SHIPPED_DT = SOURCE.SHIPPED_DATE\n  AND TARGET.ORDER_SHIPPED_FLAG = SOURCE.IS_ORDER_SHIPPED\n  AND TARGET.INTERNAL_NOTES = SOURCE.INTERNAL_NOTES\n  AND TARGET.PUBLIC_NOTES = SOURCE.PUBLIC_NOTES\n  AND TARGET.AUTOSHIP_DISCOUNT_AMT = SOURCE.AUTOSHIP_DISCOUNT_AMOUNT\n  AND TARGET.ORDER_MERCHANT_NOTES = SOURCE.ORDER_MERCHANT_NOTES\n  AND TARGET.RISKORDER_FLAG = SOURCE.IS_RISKORDER\n  AND TARGET.RISK_REASON = SOURCE.RISK_REASONS\n  AND TARGET.ORIG_SHIP_METHOD_CD = SOURCE.ORIGINAL_SHIPPING_METHOD_CODE\n  AND TARGET.SHIP_HOLD_FLAG = SOURCE.IS_SHIPHOLD\n  AND TARGET.SHIP_HOLD_DT = SOURCE.SHIPHOLD_DATE\n  AND TARGET.SHIP_RELEASE_DT = SOURCE.SHIPRELEASED_DATE\n  AND TARGET.ORDER_QTY = SOURCE.ORDERED_QUANTITY\n  AND TARGET.ITEM_DESC = SOURCE.ITEM_DESCRIPTION\n  AND TARGET.EXT_PRICE = SOURCE.EXT_PRICE\n  AND TARGET.ORDER_DETAIL_CREATED_DT = SOURCE.ORDER_DETAIL_CREATED_DATE\n  AND TARGET.ORDER_DETAIL_MODIFIED_DT = SOURCE.ORDER_DETAIL_MODIFIED_DATE\n  AND TARGET.HOW_TO_GET_RX = SOURCE.HOW_TO_GET_RX\n  AND TARGET.VET_CD = SOURCE.VET_CODE\n  AND TARGET.PET_CD = SOURCE.PET_CODE\n  AND TARGET.ORDER_DETAIL_ONHOLD_FLAG = SOURCE.IS_ORDER_DETAIL_ONHOLD\n  AND TARGET.ONHOLD_TO_FILL_FLAG = SOURCE.IS_ONHOLD_TOFILL\n  AND TARGET.UPDATE_TSTMP = SOURCE.UPDATE_TSTMP\n  AND TARGET.LOAD_TSTMP = SOURCE.LOAD_TSTMP THEN DELETE\n  WHEN NOT MATCHED\n  AND SOURCE.UPDATE_STRATEGY_FLAG = \"DD_INSERT\" THEN\nINSERT\n  (\n    TARGET.ALLIVET_ORDER_NBR_v2_test__,\n    TARGET.ALLIVET_ORDER_LN_NBR_v2_test__,\n    TARGET.ALLIVET_ORDER_DT,\n    TARGET.PETSMART_ORDER_DT,\n    TARGET.ORDER_STATUS,\n    TARGET.PRODUCT_ID,\n    TARGET.PETSMART_ORDER_NBR,\n    TARGET.PETSMART_SKU_NBR,\n    TARGET.ALLIVET_SKU_NBR,\n    TARGET.SUB_TOTAL_AMT,\n    TARGET.FREIGHT_COST,\n    TARGET.TOTAL_AMT,\n    TARGET.SHIP_METHOD_CD,\n    TARGET.ORDER_VOIDED_FLAG,\n    TARGET.ORDER_ONHOLD_FLAG,\n    TARGET.ORDER_CREATED_DT,\n    TARGET.ORDER_MODIFIED_DT,\n    TARGET.SHIPPED_DT,\n    TARGET.ORDER_SHIPPED_FLAG,\n    TARGET.INTERNAL_NOTES,\n    TARGET.PUBLIC_NOTES,\n    TARGET.AUTOSHIP_DISCOUNT_AMT,\n    TARGET.ORDER_MERCHANT_NOTES,\n    TARGET.RISKORDER_FLAG,\n    TARGET.RISK_REASON,\n    TARGET.ORIG_SHIP_METHOD_CD,\n    TARGET.SHIP_HOLD_FLAG,\n    TARGET.SHIP_HOLD_DT,\n    TARGET.SHIP_RELEASE_DT,\n    TARGET.ORDER_QTY,\n    TARGET.ITEM_DESC,\n    TARGET.EXT_PRICE,\n    TARGET.ORDER_DETAIL_CREATED_DT,\n    TARGET.ORDER_DETAIL_MODIFIED_DT,\n    TARGET.HOW_TO_GET_RX,\n    TARGET.VET_CD,\n    TARGET.PET_CD,\n    TARGET.ORDER_DETAIL_ONHOLD_FLAG,\n    TARGET.ONHOLD_TO_FILL_FLAG,\n    TARGET.UPDATE_TSTMP,\n    TARGET.LOAD_TSTMP\n  )\nVALUES\n  (\n    SOURCE.ALLIVET_ORDER_CODE,\n    SOURCE.ALLIVET_ORDER_LINE_NUMBER,\n    SOURCE.ALLIVET_ORDER_DATE,\n    SOURCE.PETSMART_ORDER_DATE,\n    SOURCE.ORDER_STATUS,\n    SOURCE.PRODUCT_ID,\n    SOURCE.PETSMART_ORDER_CODE,\n    SOURCE.PETSMART_SKU,\n    SOURCE.ALLIVET_SKU,\n    SOURCE.SUB_TOTAL,\n    SOURCE.FREIGHT,\n    SOURCE.TOTAL,\n    SOURCE.SHIPPING_METHOD_CODE,\n    SOURCE.IS_ORDER_VOIDED,\n    SOURCE.IS_ORDER_ONHOLD,\n    SOURCE.ORDER_CREATED_DATE,\n    SOURCE.ORDER_MODIFIED_DATE,\n    SOURCE.SHIPPED_DATE,\n    SOURCE.IS_ORDER_SHIPPED,\n    SOURCE.INTERNAL_NOTES,\n    SOURCE.PUBLIC_NOTES,\n    SOURCE.AUTOSHIP_DISCOUNT_AMOUNT,\n    SOURCE.ORDER_MERCHANT_NOTES,\n    SOURCE.IS_RISKORDER,\n    SOURCE.RISK_REASONS,\n    SOURCE.ORIGINAL_SHIPPING_METHOD_CODE,\n    SOURCE.IS_SHIPHOLD,\n    SOURCE.SHIPHOLD_DATE,\n    SOURCE.SHIPRELEASED_DATE,\n    SOURCE.ORDERED_QUANTITY,\n    SOURCE.ITEM_DESCRIPTION,\n    SOURCE.EXT_PRICE,\n    SOURCE.ORDER_DETAIL_CREATED_DATE,\n    SOURCE.ORDER_DETAIL_MODIFIED_DATE,\n    SOURCE.HOW_TO_GET_RX,\n    SOURCE.VET_CODE,\n    SOURCE.PET_CODE,\n    SOURCE.IS_ORDER_DETAIL_ONHOLD,\n    SOURCE.IS_ONHOLD_TOFILL,\n    SOURCE.UPDATE_TSTMP,\n    SOURCE.LOAD_TSTMP\n  )\"\"\")"]},"id":"Shortcut_to_ALLIVET_ORDER_DAY1","position":{"x":0,"y":0},"type":"normalNode"}]}