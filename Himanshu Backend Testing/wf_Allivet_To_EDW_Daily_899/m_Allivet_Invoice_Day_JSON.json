{"Edges":[{"id":"e-0","source":"Shortcut_to_ALLIVET_INVOICE_DAY","target":"SQ_Shortcut_to_ALLIVET_INVOICE_DAY","transformationType":"Source Qualifier"},{"id":"e-1","source":"Shortcut_to_ALLIVET_DAILY_INVOICE_PRE","target":"SQ_Shortcut_to_ALLIVET_DAILY_INVOICE_PRE","transformationType":"Source Qualifier"},{"id":"e-2","source":"Shortcut_to_SKU_PROFILE","target":"SQ_Shortcut_to_SKU_PROFILE","transformationType":"Source Qualifier"},{"id":"e-3","source":"SQ_Shortcut_to_ALLIVET_DAILY_INVOICE_PRE","target":"Jnr_SKU_Profile","transformationType":"Joiner"},{"id":"e-4","source":"SQ_Shortcut_to_SKU_PROFILE","target":"Jnr_SKU_Profile","transformationType":"Joiner"},{"id":"e-5","source":"Jnr_SKU_Profile","target":"Jnr_Insert_Update","transformationType":"Joiner"},{"id":"e-6","source":"SQ_Shortcut_to_ALLIVET_INVOICE_DAY","target":"Jnr_Insert_Update","transformationType":"Joiner"},{"id":"e-7","source":"Jnr_Insert_Update","target":"Exp_Update_Flag","transformationType":"Expression"},{"id":"e-8","source":"Exp_Update_Flag","target":"Ftr_Ins_Upd","transformationType":"Filter"},{"id":"e-9","source":"Ftr_Ins_Upd","target":"UPDTRANS","transformationType":"Update Strategy"},{"id":"e-10","source":"UPDTRANS","target":"Shortcut_to_ALLIVET_INVOICE_DAY","transformationType":"Target Definition"}],"Nodes":[{"data":{"transformationType":"Source Definition","label":"Shortcut_to_ALLIVET_INVOICE_DAY","queries":["df_0 = spark.sql(\"\"\"SELECT\n  INVOICE_POSTING_DT AS INVOICE_POSTING_DT,\n  INVOICE_CD_v2_test__ AS INVOICE_CD,\n  TXN_TYPE AS TXN_TYPE,\n  ALLIVET_ORDER_NBR_v2_test__ AS ALLIVET_ORDER_NBR,\n  ALLIVET_SKU_NBR AS ALLIVET_SKU_NBR,\n  PRODUCT_ID AS PRODUCT_ID,\n  PETSMART_ORDER_NBR AS PETSMART_ORDER_NBR,\n  PETSMART_SKU_NBR AS PETSMART_SKU_NBR,\n  UPC_ID AS UPC_ID,\n  SOLD_UNITS_QTY AS SOLD_UNITS_QTY,\n  PRODUCT_COST_v2_test__ AS PRODUCT_COST,\n  RETAIL_PRICE AS RETAIL_PRICE,\n  MANUFACTURER AS MANUFACTURER,\n  BRAND_NAME AS BRAND_NAME,\n  TITLE AS TITLE,\n  FREIGHT_FEE_AMT AS FREIGHT_FEE_AMT,\n  PACKAGING_FEE_AMT AS PACKAGING_FEE_AMT,\n  DISPENSING_FEE_AMT AS DISPENSING_FEE_AMT,\n  SHIPPED_DT AS SHIPPED_DT,\n  FULFILLMENT_ORIGIN_ZIP_CD AS FULFILLMENT_ORIGIN_ZIP_CD,\n  SHIP_CARRIER_NAME AS SHIP_CARRIER_NAME,\n  TRACKING_NBR AS TRACKING_NBR,\n  ALLIVET_CUSTOMER_NBR AS ALLIVET_CUSTOMER_NBR,\n  PET_NAME AS PET_NAME,\n  PET_TYPE AS PET_TYPE,\n  BREED_TYPE AS BREED_TYPE,\n  PET_GENDER AS PET_GENDER,\n  PET_BIRT_DT AS PET_BIRT_DT,\n  PET_WEIGHT AS PET_WEIGHT,\n  PET_ALLERGY_DESC AS PET_ALLERGY_DESC,\n  PET_MEDICAL_CONDITION AS PET_MEDICAL_CONDITION,\n  PET_PREGNANT_FLAG AS PET_PREGNANT_FLAG,\n  VET_CLINIC_NAME AS VET_CLINIC_NAME,\n  VET_NAME AS VET_NAME,\n  VET_ADDRESS AS VET_ADDRESS,\n  VET_CITY AS VET_CITY,\n  VET_STATE_CD AS VET_STATE_CD,\n  VET_ZIP_CD AS VET_ZIP_CD,\n  VET_PHONE_NBR AS VET_PHONE_NBR,\n  DELETE_FLAG AS DELETE_FLAG,\n  UPDATE_TSTMP AS UPDATE_TSTMP,\n  LOAD_TSTMP AS LOAD_TSTMP\nFROM\n  ALLIVET_INVOICE_DAY_v2_test__\"\"\")","df_0.createOrReplaceTempView(\"Shortcut_to_ALLIVET_INVOICE_DAY_0\")"]},"id":"Shortcut_to_ALLIVET_INVOICE_DAY","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Qualifier","label":"SQ_Shortcut_to_ALLIVET_INVOICE_DAY","queries":["df_1 = spark.sql(\"\"\"SELECT\n  INVOICE_POSTING_DT AS INVOICE_POSTING_DT,\n  INVOICE_CD AS INVOICE_CD,\n  TXN_TYPE AS TXN_TYPE,\n  ALLIVET_ORDER_NBR AS ALLIVET_ORDER_NBR,\n  ALLIVET_SKU_NBR AS ALLIVET_SKU_NBR,\n  PRODUCT_ID AS PRODUCT_ID,\n  PETSMART_ORDER_NBR AS PETSMART_ORDER_NBR,\n  PETSMART_SKU_NBR AS PETSMART_SKU_NBR,\n  UPC_ID AS UPC_ID,\n  SOLD_UNITS_QTY AS SOLD_UNITS_QTY,\n  PRODUCT_COST AS PRODUCT_COST,\n  RETAIL_PRICE AS RETAIL_PRICE,\n  MANUFACTURER AS MANUFACTURER,\n  BRAND_NAME AS BRAND_NAME,\n  TITLE AS TITLE,\n  FREIGHT_FEE_AMT AS FREIGHT_FEE_AMT,\n  PACKAGING_FEE_AMT AS PACKAGING_FEE_AMT,\n  DISPENSING_FEE_AMT AS DISPENSING_FEE_AMT,\n  FULFILLMENT_ORIGIN_ZIP_CD AS FULFILLMENT_ORIGIN_ZIP_CD,\n  SHIP_CARRIER_NAME AS SHIP_CARRIER_NAME,\n  TRACKING_NBR AS TRACKING_NBR,\n  ALLIVET_CUSTOMER_NBR AS ALLIVET_CUSTOMER_NBR,\n  PET_NAME AS PET_NAME,\n  PET_TYPE AS PET_TYPE,\n  BREED_TYPE AS BREED_TYPE,\n  PET_GENDER AS PET_GENDER,\n  PET_BIRT_DT AS PET_BIRT_DT,\n  PET_WEIGHT AS PET_WEIGHT,\n  PET_ALLERGY_DESC AS PET_ALLERGY_DESC,\n  PET_MEDICAL_CONDITION AS PET_MEDICAL_CONDITION,\n  PET_PREGNANT_FLAG AS PET_PREGNANT_FLAG,\n  VET_CLINIC_NAME AS VET_CLINIC_NAME,\n  VET_NAME AS VET_NAME,\n  VET_ADDRESS AS VET_ADDRESS,\n  VET_CITY AS VET_CITY,\n  VET_STATE_CD AS VET_STATE_CD,\n  VET_ZIP_CD AS VET_ZIP_CD,\n  VET_PHONE_NBR AS VET_PHONE_NBR,\n  DELETE_FLAG AS DELETE_FLAG,\n  UPDATE_TSTMP AS UPDATE_TSTMP,\n  LOAD_TSTMP AS LOAD_TSTMP,\n  monotonically_increasing_id() AS Monotonically_Increasing_Id\nFROM\n  Shortcut_to_ALLIVET_INVOICE_DAY_0\"\"\")","df_1.createOrReplaceTempView(\"SQ_Shortcut_to_ALLIVET_INVOICE_DAY_1\")"]},"id":"SQ_Shortcut_to_ALLIVET_INVOICE_DAY","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"Shortcut_to_ALLIVET_DAILY_INVOICE_PRE","queries":["df_2 = spark.sql(\"\"\"SELECT\n  INVOICE_POSTING_DATE_v2_test__ AS INVOICE_POSTING_DATE,\n  INVOICE_CODE AS INVOICE_CODE,\n  TRANSACTION_TYPE AS TRANSACTION_TYPE,\n  ALLIVET_ORDER_CODE AS ALLIVET_ORDER_CODE,\n  ALLIVET_SKU AS ALLIVET_SKU,\n  PETSMART_ORDER_CODE AS PETSMART_ORDER_CODE,\n  PETSMART_SKU_v2_test__ AS PETSMART_SKU,\n  UPC AS UPC,\n  UNITS_SOLD AS UNITS_SOLD,\n  PRODUCT_COST_v2_test__ AS PRODUCT_COST,\n  RETAIL_PRICE AS RETAIL_PRICE,\n  MANUFACTURER AS MANUFACTURER,\n  BRAND AS BRAND,\n  TITLE AS TITLE,\n  FREIGHT_FEE AS FREIGHT_FEE,\n  PACKAGING_FEE AS PACKAGING_FEE,\n  DISPENSING_FEE AS DISPENSING_FEE,\n  SHIPPED_DATE AS SHIPPED_DATE,\n  FULFILLMENT_ORIGIN_ZIP_CODE AS FULFILLMENT_ORIGIN_ZIP_CODE,\n  SHIPPING_CARRIER AS SHIPPING_CARRIER,\n  TRACKING_NUMBER AS TRACKING_NUMBER,\n  ALLIVET_CUSTOMER_ID AS ALLIVET_CUSTOMER_ID,\n  PET_NAME AS PET_NAME,\n  PET_TYPE AS PET_TYPE,\n  BREED_TYPE AS BREED_TYPE,\n  PET_GENDER AS PET_GENDER,\n  PET_DOB AS PET_DOB,\n  PET_WEIGHT AS PET_WEIGHT,\n  PET_ALLERGY AS PET_ALLERGY,\n  PET_MEDICAL_CONDITIONS AS PET_MEDICAL_CONDITIONS,\n  PET_IS_PREGNANT AS PET_IS_PREGNANT,\n  VET_CLINIC_NAME AS VET_CLINIC_NAME,\n  VETERINARY_NAME AS VETERINARY_NAME,\n  VET_ADDRESS AS VET_ADDRESS,\n  VET_CITY AS VET_CITY,\n  VET_STATE AS VET_STATE,\n  VET_ZIP AS VET_ZIP,\n  VET_PHONE_NUMBER AS VET_PHONE_NUMBER,\n  LOAD_TSTMP AS LOAD_TSTMP\nFROM\n  ALLIVET_DAILY_INVOICE_PRE_v2_test__\"\"\")","df_2.createOrReplaceTempView(\"Shortcut_to_ALLIVET_DAILY_INVOICE_PRE_2\")"]},"id":"Shortcut_to_ALLIVET_DAILY_INVOICE_PRE","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Qualifier","label":"SQ_Shortcut_to_ALLIVET_DAILY_INVOICE_PRE","queries":["df_3 = spark.sql(\"\"\"SELECT\n  INVOICE_POSTING_DATE AS INVOICE_POSTING_DATE,\n  INVOICE_CODE AS INVOICE_CODE,\n  TRANSACTION_TYPE AS TRANSACTION_TYPE,\n  ALLIVET_ORDER_CODE AS ALLIVET_ORDER_CODE,\n  ALLIVET_SKU AS ALLIVET_SKU,\n  PETSMART_ORDER_CODE AS PETSMART_ORDER_CODE,\n  PETSMART_SKU AS PETSMART_SKU,\n  UPC AS UPC,\n  UNITS_SOLD AS UNITS_SOLD,\n  PRODUCT_COST AS PRODUCT_COST,\n  MANUFACTURER AS MANUFACTURER,\n  BRAND AS BRAND,\n  TITLE AS TITLE,\n  FREIGHT_FEE AS FREIGHT_FEE,\n  PACKAGING_FEE AS PACKAGING_FEE,\n  DISPENSING_FEE AS DISPENSING_FEE,\n  SHIPPED_DATE AS SHIPPED_DATE,\n  FULFILLMENT_ORIGIN_ZIP_CODE AS FULFILLMENT_ORIGIN_ZIP_CODE,\n  SHIPPING_CARRIER AS SHIPPING_CARRIER,\n  TRACKING_NUMBER AS TRACKING_NUMBER,\n  ALLIVET_CUSTOMER_ID AS ALLIVET_CUSTOMER_ID,\n  PET_NAME AS PET_NAME,\n  PET_TYPE AS PET_TYPE,\n  BREED_TYPE AS BREED_TYPE,\n  PET_GENDER AS PET_GENDER,\n  PET_DOB AS PET_DOB,\n  PET_WEIGHT AS PET_WEIGHT,\n  PET_ALLERGY AS PET_ALLERGY,\n  PET_MEDICAL_CONDITIONS AS PET_MEDICAL_CONDITIONS,\n  PET_IS_PREGNANT AS PET_IS_PREGNANT,\n  VET_CLINIC_NAME AS VET_CLINIC_NAME,\n  VETERINARY_NAME AS VETERINARY_NAME,\n  VET_ADDRESS AS VET_ADDRESS,\n  VET_CITY AS VET_CITY,\n  VET_STATE AS VET_STATE,\n  VET_ZIP AS VET_ZIP,\n  VET_PHONE_NUMBER AS VET_PHONE_NUMBER,\n  LOAD_TSTMP AS LOAD_TSTMP,\n  RETAIL_PRICE AS RETAIL_PRICE,\n  monotonically_increasing_id() AS Monotonically_Increasing_Id\nFROM\n  Shortcut_to_ALLIVET_DAILY_INVOICE_PRE_2\"\"\")","df_3.createOrReplaceTempView(\"SQ_Shortcut_to_ALLIVET_DAILY_INVOICE_PRE_3\")"]},"id":"SQ_Shortcut_to_ALLIVET_DAILY_INVOICE_PRE","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"Shortcut_to_SKU_PROFILE","queries":["df_4 = spark.sql(\"\"\"SELECT\n  PRODUCT_ID AS PRODUCT_ID,\n  SKU_NBR AS SKU_NBR,\n  SKU_TYPE AS SKU_TYPE,\n  PRIMARY_UPC_ID AS PRIMARY_UPC_ID,\n  STATUS_ID AS STATUS_ID,\n  SUBS_HIST_FLAG AS SUBS_HIST_FLAG,\n  SUBS_CURR_FLAG AS SUBS_CURR_FLAG,\n  SKU_DESC AS SKU_DESC,\n  ALT_DESC AS ALT_DESC,\n  SAP_CATEGORY_ID AS SAP_CATEGORY_ID,\n  SAP_CLASS_ID AS SAP_CLASS_ID,\n  SAP_DEPT_ID AS SAP_DEPT_ID,\n  SAP_DIVISION_ID AS SAP_DIVISION_ID,\n  PRIMARY_VENDOR_ID AS PRIMARY_VENDOR_ID,\n  PARENT_VENDOR_ID AS PARENT_VENDOR_ID,\n  COUNTRY_CD AS COUNTRY_CD,\n  IMPORT_FLAG AS IMPORT_FLAG,\n  HTS_CODE_ID AS HTS_CODE_ID,\n  CONTENTS AS CONTENTS,\n  CONTENTS_UNITS AS CONTENTS_UNITS,\n  WEIGHT_NET_AMT AS WEIGHT_NET_AMT,\n  WEIGHT_UOM_CD AS WEIGHT_UOM_CD,\n  SIZE_DESC AS SIZE_DESC,\n  BUM_QTY AS BUM_QTY,\n  UOM_CD AS UOM_CD,\n  UNIT_NUMERATOR AS UNIT_NUMERATOR,\n  UNIT_DENOMINATOR AS UNIT_DENOMINATOR,\n  BUYER_ID AS BUYER_ID,\n  PURCH_GROUP_ID AS PURCH_GROUP_ID,\n  PURCH_COST_AMT AS PURCH_COST_AMT,\n  NAT_PRICE_US_AMT AS NAT_PRICE_US_AMT,\n  TAX_CLASS_ID AS TAX_CLASS_ID,\n  VALUATION_CLASS_CD AS VALUATION_CLASS_CD,\n  BRAND_CD AS BRAND_CD,\n  BRAND_CLASSIFICATION_ID AS BRAND_CLASSIFICATION_ID,\n  OWNBRAND_FLAG AS OWNBRAND_FLAG,\n  STATELINE_FLAG AS STATELINE_FLAG,\n  SIGN_TYPE_CD AS SIGN_TYPE_CD,\n  OLD_ARTICLE_NBR AS OLD_ARTICLE_NBR,\n  VENDOR_ARTICLE_NBR AS VENDOR_ARTICLE_NBR,\n  INIT_MKDN_DT AS INIT_MKDN_DT,\n  DISC_START_DT AS DISC_START_DT,\n  ADD_DT AS ADD_DT,\n  DELETE_DT AS DELETE_DT,\n  UPDATE_DT AS UPDATE_DT,\n  FIRST_SALE_DT AS FIRST_SALE_DT,\n  LAST_SALE_DT AS LAST_SALE_DT,\n  FIRST_INV_DT AS FIRST_INV_DT,\n  LAST_INV_DT AS LAST_INV_DT,\n  LOAD_DT AS LOAD_DT,\n  BASE_NBR AS BASE_NBR,\n  BP_COLOR_ID AS BP_COLOR_ID,\n  BP_SIZE_ID AS BP_SIZE_ID,\n  BP_BREED_ID AS BP_BREED_ID,\n  BP_ITEM_CONCATENATED AS BP_ITEM_CONCATENATED,\n  BP_AEROSOL_FLAG AS BP_AEROSOL_FLAG,\n  BP_HAZMAT_FLAG AS BP_HAZMAT_FLAG,\n  CANADIAN_HTS_CD AS CANADIAN_HTS_CD,\n  NAT_PRICE_CA_AMT AS NAT_PRICE_CA_AMT,\n  NAT_PRICE_PR_AMT AS NAT_PRICE_PR_AMT,\n  RTV_DEPT_CD AS RTV_DEPT_CD,\n  GL_ACCT_NBR AS GL_ACCT_NBR,\n  ARTICLE_CATEGORY_ID AS ARTICLE_CATEGORY_ID,\n  COMPONENT_FLAG AS COMPONENT_FLAG,\n  ZDISCO_SCHED_TYPE_ID AS ZDISCO_SCHED_TYPE_ID,\n  ZDISCO_MKDN_SCHED_ID AS ZDISCO_MKDN_SCHED_ID,\n  ZDISCO_PID_DT AS ZDISCO_PID_DT,\n  ZDISCO_START_DT AS ZDISCO_START_DT,\n  ZDISCO_INIT_MKDN_DT AS ZDISCO_INIT_MKDN_DT,\n  ZDISCO_DC_DT AS ZDISCO_DC_DT,\n  ZDISCO_STR_DT AS ZDISCO_STR_DT,\n  ZDISCO_STR_OWNRSHP_DT AS ZDISCO_STR_OWNRSHP_DT,\n  ZDISCO_STR_WRT_OFF_DT AS ZDISCO_STR_WRT_OFF_DT\nFROM\n  SKU_PROFILE\"\"\")","df_4.createOrReplaceTempView(\"Shortcut_to_SKU_PROFILE_4\")"]},"id":"Shortcut_to_SKU_PROFILE","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Qualifier","label":"SQ_Shortcut_to_SKU_PROFILE","queries":["df_5 = spark.sql(\"\"\"SELECT\n  PRODUCT_ID AS PRODUCT_ID,\n  SKU_NBR AS SKU_NBR,\n  SKU_TYPE AS SKU_TYPE,\n  PRIMARY_UPC_ID AS PRIMARY_UPC_ID,\n  STATUS_ID AS STATUS_ID,\n  SUBS_HIST_FLAG AS SUBS_HIST_FLAG,\n  SUBS_CURR_FLAG AS SUBS_CURR_FLAG,\n  SKU_DESC AS SKU_DESC,\n  ALT_DESC AS ALT_DESC,\n  SAP_CATEGORY_ID AS SAP_CATEGORY_ID,\n  SAP_CLASS_ID AS SAP_CLASS_ID,\n  SAP_DEPT_ID AS SAP_DEPT_ID,\n  SAP_DIVISION_ID AS SAP_DIVISION_ID,\n  PRIMARY_VENDOR_ID AS PRIMARY_VENDOR_ID,\n  PARENT_VENDOR_ID AS PARENT_VENDOR_ID,\n  COUNTRY_CD AS COUNTRY_CD,\n  IMPORT_FLAG AS IMPORT_FLAG,\n  HTS_CODE_ID AS HTS_CODE_ID,\n  CONTENTS AS CONTENTS,\n  CONTENTS_UNITS AS CONTENTS_UNITS,\n  WEIGHT_NET_AMT AS WEIGHT_NET_AMT,\n  WEIGHT_UOM_CD AS WEIGHT_UOM_CD,\n  SIZE_DESC AS SIZE_DESC,\n  BUM_QTY AS BUM_QTY,\n  UOM_CD AS UOM_CD,\n  UNIT_NUMERATOR AS UNIT_NUMERATOR,\n  UNIT_DENOMINATOR AS UNIT_DENOMINATOR,\n  BUYER_ID AS BUYER_ID,\n  PURCH_GROUP_ID AS PURCH_GROUP_ID,\n  PURCH_COST_AMT AS PURCH_COST_AMT,\n  NAT_PRICE_US_AMT AS NAT_PRICE_US_AMT,\n  TAX_CLASS_ID AS TAX_CLASS_ID,\n  VALUATION_CLASS_CD AS VALUATION_CLASS_CD,\n  BRAND_CD AS BRAND_CD,\n  BRAND_CLASSIFICATION_ID AS BRAND_CLASSIFICATION_ID,\n  OWNBRAND_FLAG AS OWNBRAND_FLAG,\n  STATELINE_FLAG AS STATELINE_FLAG,\n  SIGN_TYPE_CD AS SIGN_TYPE_CD,\n  OLD_ARTICLE_NBR AS OLD_ARTICLE_NBR,\n  VENDOR_ARTICLE_NBR AS VENDOR_ARTICLE_NBR,\n  INIT_MKDN_DT AS INIT_MKDN_DT,\n  DISC_START_DT AS DISC_START_DT,\n  ADD_DT AS ADD_DT,\n  DELETE_DT AS DELETE_DT,\n  UPDATE_DT AS UPDATE_DT,\n  FIRST_SALE_DT AS FIRST_SALE_DT,\n  LAST_SALE_DT AS LAST_SALE_DT,\n  FIRST_INV_DT AS FIRST_INV_DT,\n  LAST_INV_DT AS LAST_INV_DT,\n  LOAD_DT AS LOAD_DT,\n  BASE_NBR AS BASE_NBR,\n  BP_COLOR_ID AS BP_COLOR_ID,\n  BP_SIZE_ID AS BP_SIZE_ID,\n  BP_BREED_ID AS BP_BREED_ID,\n  BP_ITEM_CONCATENATED AS BP_ITEM_CONCATENATED,\n  BP_AEROSOL_FLAG AS BP_AEROSOL_FLAG,\n  BP_HAZMAT_FLAG AS BP_HAZMAT_FLAG,\n  CANADIAN_HTS_CD AS CANADIAN_HTS_CD,\n  NAT_PRICE_CA_AMT AS NAT_PRICE_CA_AMT,\n  NAT_PRICE_PR_AMT AS NAT_PRICE_PR_AMT,\n  RTV_DEPT_CD AS RTV_DEPT_CD,\n  GL_ACCT_NBR AS GL_ACCT_NBR,\n  ARTICLE_CATEGORY_ID AS ARTICLE_CATEGORY_ID,\n  COMPONENT_FLAG AS COMPONENT_FLAG,\n  ZDISCO_SCHED_TYPE_ID AS ZDISCO_SCHED_TYPE_ID,\n  ZDISCO_MKDN_SCHED_ID AS ZDISCO_MKDN_SCHED_ID,\n  ZDISCO_PID_DT AS ZDISCO_PID_DT,\n  ZDISCO_START_DT AS ZDISCO_START_DT,\n  ZDISCO_INIT_MKDN_DT AS ZDISCO_INIT_MKDN_DT,\n  ZDISCO_DC_DT AS ZDISCO_DC_DT,\n  ZDISCO_STR_DT AS ZDISCO_STR_DT,\n  ZDISCO_STR_OWNRSHP_DT AS ZDISCO_STR_OWNRSHP_DT,\n  ZDISCO_STR_WRT_OFF_DT AS ZDISCO_STR_WRT_OFF_DT,\n  monotonically_increasing_id() AS Monotonically_Increasing_Id\nFROM\n  Shortcut_to_SKU_PROFILE_4\"\"\")","df_5.createOrReplaceTempView(\"SQ_Shortcut_to_SKU_PROFILE_5\")"]},"id":"SQ_Shortcut_to_SKU_PROFILE","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Joiner","label":"Jnr_SKU_Profile","queries":["df_6 = spark.sql(\"\"\"SELECT\n  DETAIL.INVOICE_POSTING_DATE AS INVOICE_POSTING_DATE,\n  DETAIL.INVOICE_CODE AS INVOICE_CODE,\n  DETAIL.TRANSACTION_TYPE AS TRANSACTION_TYPE,\n  DETAIL.ALLIVET_ORDER_CODE AS ALLIVET_ORDER_CODE,\n  DETAIL.ALLIVET_SKU AS ALLIVET_SKU,\n  DETAIL.PETSMART_ORDER_CODE AS PETSMART_ORDER_CODE,\n  DETAIL.PETSMART_SKU AS PETSMART_SKU,\n  DETAIL.UPC AS UPC,\n  DETAIL.UNITS_SOLD AS UNITS_SOLD,\n  DETAIL.PRODUCT_COST AS PRODUCT_COST,\n  DETAIL.MANUFACTURER AS MANUFACTURER,\n  DETAIL.BRAND AS BRAND,\n  DETAIL.TITLE AS TITLE,\n  DETAIL.FREIGHT_FEE AS FREIGHT_FEE,\n  DETAIL.PACKAGING_FEE AS PACKAGING_FEE,\n  DETAIL.DISPENSING_FEE AS DISPENSING_FEE,\n  DETAIL.SHIPPED_DATE AS SHIPPED_DATE,\n  DETAIL.FULFILLMENT_ORIGIN_ZIP_CODE AS FULFILLMENT_ORIGIN_ZIP_CODE,\n  DETAIL.SHIPPING_CARRIER AS SHIPPING_CARRIER,\n  DETAIL.TRACKING_NUMBER AS TRACKING_NUMBER,\n  DETAIL.ALLIVET_CUSTOMER_ID AS ALLIVET_CUSTOMER_ID,\n  DETAIL.PET_NAME AS PET_NAME,\n  DETAIL.PET_TYPE AS PET_TYPE,\n  DETAIL.BREED_TYPE AS BREED_TYPE,\n  DETAIL.PET_GENDER AS PET_GENDER,\n  DETAIL.PET_DOB AS PET_DOB,\n  DETAIL.PET_WEIGHT AS PET_WEIGHT,\n  DETAIL.PET_ALLERGY AS PET_ALLERGY,\n  DETAIL.PET_MEDICAL_CONDITIONS AS PET_MEDICAL_CONDITIONS,\n  DETAIL.PET_IS_PREGNANT AS PET_IS_PREGNANT,\n  DETAIL.VET_CLINIC_NAME AS VET_CLINIC_NAME,\n  DETAIL.VETERINARY_NAME AS VETERINARY_NAME,\n  DETAIL.VET_ADDRESS AS VET_ADDRESS,\n  DETAIL.VET_CITY AS VET_CITY,\n  DETAIL.VET_STATE AS VET_STATE,\n  DETAIL.VET_ZIP AS VET_ZIP,\n  DETAIL.VET_PHONE_NUMBER AS VET_PHONE_NUMBER,\n  DETAIL.LOAD_TSTMP AS LOAD_TSTMP,\n  MASTER.PRODUCT_ID AS PRODUCT_ID,\n  MASTER.SKU_NBR AS SKU_NBR,\n  DETAIL.RETAIL_PRICE AS RETAIL_PRICE,\n  DETAIL.Monotonically_Increasing_Id AS Monotonically_Increasing_Id\nFROM\n  SQ_Shortcut_to_SKU_PROFILE_5 MASTER\n  RIGHT JOIN SQ_Shortcut_to_ALLIVET_DAILY_INVOICE_PRE_3 DETAIL ON MASTER.SKU_NBR = DETAIL.PETSMART_SKU\"\"\")","df_6.createOrReplaceTempView(\"Jnr_SKU_Profile_6\")"]},"id":"Jnr_SKU_Profile","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Joiner","label":"Jnr_Insert_Update","queries":["df_7 = spark.sql(\"\"\"SELECT\n  DETAIL.INVOICE_POSTING_DATE AS INVOICE_POSTING_DATE,\n  DETAIL.INVOICE_CODE AS INVOICE_CODE,\n  DETAIL.TRANSACTION_TYPE AS TRANSACTION_TYPE,\n  DETAIL.ALLIVET_ORDER_CODE AS ALLIVET_ORDER_CODE,\n  DETAIL.ALLIVET_SKU AS ALLIVET_SKU,\n  DETAIL.PETSMART_ORDER_CODE AS PETSMART_ORDER_CODE,\n  DETAIL.PETSMART_SKU AS PETSMART_SKU,\n  DETAIL.UPC AS UPC,\n  DETAIL.UNITS_SOLD AS UNITS_SOLD,\n  DETAIL.PRODUCT_COST AS PRODUCT_COST,\n  DETAIL.MANUFACTURER AS MANUFACTURER,\n  DETAIL.BRAND AS BRAND,\n  DETAIL.TITLE AS TITLE,\n  DETAIL.FREIGHT_FEE AS FREIGHT_FEE,\n  DETAIL.PACKAGING_FEE AS PACKAGING_FEE,\n  DETAIL.DISPENSING_FEE AS DISPENSING_FEE,\n  DETAIL.SHIPPED_DATE AS SHIPPED_DATE,\n  DETAIL.FULFILLMENT_ORIGIN_ZIP_CODE AS FULFILLMENT_ORIGIN_ZIP_CODE,\n  DETAIL.SHIPPING_CARRIER AS SHIPPING_CARRIER,\n  DETAIL.TRACKING_NUMBER AS TRACKING_NUMBER,\n  DETAIL.ALLIVET_CUSTOMER_ID AS ALLIVET_CUSTOMER_ID,\n  DETAIL.PET_NAME AS PET_NAME,\n  DETAIL.PET_TYPE AS PET_TYPE,\n  DETAIL.BREED_TYPE AS BREED_TYPE,\n  DETAIL.PET_GENDER AS PET_GENDER,\n  DETAIL.PET_DOB AS PET_DOB,\n  DETAIL.PET_WEIGHT AS PET_WEIGHT,\n  DETAIL.PET_ALLERGY AS PET_ALLERGY,\n  DETAIL.PET_MEDICAL_CONDITIONS AS PET_MEDICAL_CONDITIONS,\n  DETAIL.PET_IS_PREGNANT AS PET_IS_PREGNANT,\n  DETAIL.VET_CLINIC_NAME AS VET_CLINIC_NAME,\n  DETAIL.VETERINARY_NAME AS VETERINARY_NAME,\n  DETAIL.VET_ADDRESS AS VET_ADDRESS,\n  DETAIL.VET_CITY AS VET_CITY,\n  DETAIL.VET_STATE AS VET_STATE,\n  DETAIL.VET_ZIP AS VET_ZIP,\n  DETAIL.VET_PHONE_NUMBER AS VET_PHONE_NUMBER,\n  DETAIL.LOAD_TSTMP AS LOAD_TSTMP,\n  DETAIL.PRODUCT_ID AS PRODUCT_ID,\n  DETAIL.SKU_NBR AS SKU_NBR,\n  MASTER.INVOICE_POSTING_DT AS LKP_INVOICE_POSTING_DT,\n  MASTER.INVOICE_CD AS LKP_INVOICE_CD,\n  MASTER.TXN_TYPE AS LKP_TXN_TYPE,\n  MASTER.ALLIVET_ORDER_NBR AS LKP_ALLIVET_ORDER_NBR,\n  MASTER.ALLIVET_SKU_NBR AS LKP_ALLIVET_SKU_NBR,\n  DETAIL.RETAIL_PRICE AS RETAIL_PRICE,\n  DETAIL.Monotonically_Increasing_Id AS Monotonically_Increasing_Id\nFROM\n  SQ_Shortcut_to_ALLIVET_INVOICE_DAY_1 MASTER\n  RIGHT JOIN Jnr_SKU_Profile_6 DETAIL ON MASTER.INVOICE_POSTING_DT = DETAIL.INVOICE_POSTING_DATE\n  AND MASTER.INVOICE_CD = DETAIL.INVOICE_CODE\n  AND MASTER.TXN_TYPE = DETAIL.TRANSACTION_TYPE\n  AND MASTER.ALLIVET_ORDER_NBR = DETAIL.ALLIVET_ORDER_CODE\n  AND MASTER.ALLIVET_SKU_NBR = DETAIL.ALLIVET_SKU\"\"\")","df_7.createOrReplaceTempView(\"Jnr_Insert_Update_7\")"]},"id":"Jnr_Insert_Update","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Expression","label":"Exp_Update_Flag","queries":["df_8 = spark.sql(\"\"\"SELECT\n  INVOICE_POSTING_DATE AS INVOICE_POSTING_DATE,\n  INVOICE_CODE AS INVOICE_CODE,\n  TRANSACTION_TYPE AS TRANSACTION_TYPE,\n  ALLIVET_ORDER_CODE AS ALLIVET_ORDER_CODE,\n  ALLIVET_SKU AS ALLIVET_SKU,\n  PETSMART_ORDER_CODE AS PETSMART_ORDER_CODE,\n  PETSMART_SKU AS PETSMART_SKU,\n  UPC AS UPC,\n  UNITS_SOLD AS UNITS_SOLD,\n  PRODUCT_COST AS PRODUCT_COST,\n  MANUFACTURER AS MANUFACTURER,\n  BRAND AS BRAND,\n  TITLE AS TITLE,\n  FREIGHT_FEE AS FREIGHT_FEE,\n  PACKAGING_FEE AS PACKAGING_FEE,\n  DISPENSING_FEE AS DISPENSING_FEE,\n  SHIPPED_DATE AS SHIPPED_DATE,\n  FULFILLMENT_ORIGIN_ZIP_CODE AS FULFILLMENT_ORIGIN_ZIP_CODE,\n  SHIPPING_CARRIER AS SHIPPING_CARRIER,\n  TRACKING_NUMBER AS TRACKING_NUMBER,\n  ALLIVET_CUSTOMER_ID AS ALLIVET_CUSTOMER_ID,\n  PET_NAME AS PET_NAME,\n  PET_TYPE AS PET_TYPE,\n  BREED_TYPE AS BREED_TYPE,\n  PET_GENDER AS PET_GENDER,\n  PET_DOB AS PET_DOB,\n  PET_WEIGHT AS PET_WEIGHT,\n  PET_ALLERGY AS PET_ALLERGY,\n  PET_MEDICAL_CONDITIONS AS PET_MEDICAL_CONDITIONS,\n  PET_IS_PREGNANT AS PET_IS_PREGNANT,\n  VET_CLINIC_NAME AS VET_CLINIC_NAME,\n  VETERINARY_NAME AS VETERINARY_NAME,\n  VET_ADDRESS AS VET_ADDRESS,\n  VET_CITY AS VET_CITY,\n  VET_STATE AS VET_STATE,\n  VET_ZIP AS VET_ZIP,\n  VET_PHONE_NUMBER AS VET_PHONE_NUMBER,\n  LOAD_TSTMP AS LOAD_TSTMP,\n  PRODUCT_ID AS PRODUCT_ID,\n  SKU_NBR AS SKU_NBR,\n  0 AS DELETE_FLAG,\n  SYSDATE AS UPDATE_TSTMP,\n  IIF(\n    (\n      ISNULL(LKP_INVOICE_POSTING_DT)\n      OR ISNULL(LKP_INVOICE_CD)\n      OR ISNULL(LKP_TXN_TYPE)\n      OR ISNULL(LKP_ALLIVET_ORDER_NBR)\n      OR ISNULL(LKP_ALLIVET_SKU_NBR)\n    ),\n    1,\n    2\n  ) AS UPDATE_FLAG,\n  RETAIL_PRICE AS RETAIL_PRICE,\n  Monotonically_Increasing_Id AS Monotonically_Increasing_Id\nFROM\n  Jnr_Insert_Update_7\"\"\")","df_8.createOrReplaceTempView(\"Exp_Update_Flag_8\")"]},"id":"Exp_Update_Flag","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Filter","label":"Ftr_Ins_Upd","queries":["df_9 = spark.sql(\"\"\"SELECT\n  INVOICE_POSTING_DATE AS INVOICE_POSTING_DATE,\n  INVOICE_CODE AS INVOICE_CODE,\n  TRANSACTION_TYPE AS TRANSACTION_TYPE,\n  ALLIVET_ORDER_CODE AS ALLIVET_ORDER_CODE,\n  ALLIVET_SKU AS ALLIVET_SKU,\n  PETSMART_ORDER_CODE AS PETSMART_ORDER_CODE,\n  PETSMART_SKU AS PETSMART_SKU,\n  UPC AS UPC,\n  UNITS_SOLD AS UNITS_SOLD,\n  PRODUCT_COST AS PRODUCT_COST,\n  MANUFACTURER AS MANUFACTURER,\n  BRAND AS BRAND,\n  TITLE AS TITLE,\n  FREIGHT_FEE AS FREIGHT_FEE,\n  PACKAGING_FEE AS PACKAGING_FEE,\n  DISPENSING_FEE AS DISPENSING_FEE,\n  SHIPPED_DATE AS SHIPPED_DATE,\n  FULFILLMENT_ORIGIN_ZIP_CODE AS FULFILLMENT_ORIGIN_ZIP_CODE,\n  SHIPPING_CARRIER AS SHIPPING_CARRIER,\n  TRACKING_NUMBER AS TRACKING_NUMBER,\n  ALLIVET_CUSTOMER_ID AS ALLIVET_CUSTOMER_ID,\n  PET_NAME AS PET_NAME,\n  PET_TYPE AS PET_TYPE,\n  BREED_TYPE AS BREED_TYPE,\n  PET_GENDER AS PET_GENDER,\n  PET_DOB AS PET_DOB,\n  PET_WEIGHT AS PET_WEIGHT,\n  PET_ALLERGY AS PET_ALLERGY,\n  PET_MEDICAL_CONDITIONS AS PET_MEDICAL_CONDITIONS,\n  PET_IS_PREGNANT AS PET_IS_PREGNANT,\n  VET_CLINIC_NAME AS VET_CLINIC_NAME,\n  VETERINARY_NAME AS VETERINARY_NAME,\n  VET_ADDRESS AS VET_ADDRESS,\n  VET_CITY AS VET_CITY,\n  VET_STATE AS VET_STATE,\n  VET_ZIP AS VET_ZIP,\n  VET_PHONE_NUMBER AS VET_PHONE_NUMBER,\n  LOAD_TSTMP AS LOAD_TSTMP,\n  PRODUCT_ID AS PRODUCT_ID,\n  SKU_NBR AS SKU_NBR,\n  DELETE_FLAG AS DELETE_FLAG,\n  UPDATE_TSTMP AS UPDATE_TSTMP,\n  UPDATE_FLAG AS UPDATE_FLAG,\n  RETAIL_PRICE AS RETAIL_PRICE,\n  Monotonically_Increasing_Id AS Monotonically_Increasing_Id\nFROM\n  Exp_Update_Flag_8\nWHERE\n  IN(UPDATE_FLAG, 1, 2)\"\"\")","df_9.createOrReplaceTempView(\"Ftr_Ins_Upd_9\")"]},"id":"Ftr_Ins_Upd","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Update Strategy","label":"UPDTRANS","queries":["df_10 = spark.sql(\"\"\"SELECT\n  INVOICE_POSTING_DATE AS INVOICE_POSTING_DATE,\n  INVOICE_CODE AS INVOICE_CODE,\n  TRANSACTION_TYPE AS TRANSACTION_TYPE,\n  ALLIVET_ORDER_CODE AS ALLIVET_ORDER_CODE,\n  ALLIVET_SKU AS ALLIVET_SKU,\n  PETSMART_ORDER_CODE AS PETSMART_ORDER_CODE,\n  PETSMART_SKU AS PETSMART_SKU,\n  UPC AS UPC,\n  UNITS_SOLD AS UNITS_SOLD,\n  PRODUCT_COST AS PRODUCT_COST,\n  RETAIL_PRICE AS RETAIL_PRICE,\n  MANUFACTURER AS MANUFACTURER,\n  BRAND AS BRAND,\n  TITLE AS TITLE,\n  FREIGHT_FEE AS FREIGHT_FEE,\n  PACKAGING_FEE AS PACKAGING_FEE,\n  DISPENSING_FEE AS DISPENSING_FEE,\n  SHIPPED_DATE AS SHIPPED_DATE,\n  FULFILLMENT_ORIGIN_ZIP_CODE AS FULFILLMENT_ORIGIN_ZIP_CODE,\n  SHIPPING_CARRIER AS SHIPPING_CARRIER,\n  TRACKING_NUMBER AS TRACKING_NUMBER,\n  ALLIVET_CUSTOMER_ID AS ALLIVET_CUSTOMER_ID,\n  PET_NAME AS PET_NAME,\n  PET_TYPE AS PET_TYPE,\n  BREED_TYPE AS BREED_TYPE,\n  PET_GENDER AS PET_GENDER,\n  PET_DOB AS PET_DOB,\n  PET_WEIGHT AS PET_WEIGHT,\n  PET_ALLERGY AS PET_ALLERGY,\n  PET_MEDICAL_CONDITIONS AS PET_MEDICAL_CONDITIONS,\n  PET_IS_PREGNANT AS PET_IS_PREGNANT,\n  VET_CLINIC_NAME AS VET_CLINIC_NAME,\n  VETERINARY_NAME AS VETERINARY_NAME,\n  VET_ADDRESS AS VET_ADDRESS,\n  VET_CITY AS VET_CITY,\n  VET_STATE AS VET_STATE,\n  VET_ZIP AS VET_ZIP,\n  VET_PHONE_NUMBER AS VET_PHONE_NUMBER,\n  LOAD_TSTMP AS LOAD_TSTMP,\n  PRODUCT_ID AS PRODUCT_ID,\n  SKU_NBR AS SKU_NBR,\n  DELETE_FLAG AS DELETE_FLAG,\n  UPDATE_TSTMP AS UPDATE_TSTMP,\n  UPDATE_FLAG AS UPDATE_FLAG,\n  Monotonically_Increasing_Id AS Monotonically_Increasing_Id,\n  DECODE(UPDATE_FLAG, 1, 'DD_INSERT', 2, 'DD_UPDATE') AS UPDATE_STRATEGY_FLAG\nFROM\n  Ftr_Ins_Upd_9\"\"\")","df_10.createOrReplaceTempView(\"UPDTRANS_10\")"]},"id":"UPDTRANS","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Target Definition","label":"Shortcut_to_ALLIVET_INVOICE_DAY","queries":["spark.sql(\"\"\"MERGE INTO ALLIVET_INVOICE_DAY_v2_test__ AS TARGET\nUSING\n  UPDTRANS_10 AS SOURCE ON TARGET.INVOICE_CD_v2_test__ = SOURCE.INVOICE_CODE\n  AND TARGET.ALLIVET_SKU_NBR = SOURCE.ALLIVET_SKU\n  AND TARGET.TXN_TYPE = SOURCE.TRANSACTION_TYPE\n  AND TARGET.INVOICE_POSTING_DT = SOURCE.INVOICE_POSTING_DATE\n  AND TARGET.ALLIVET_ORDER_NBR_v2_test__ = SOURCE.ALLIVET_ORDER_CODE\n  WHEN MATCHED\n  AND SOURCE.UPDATE_STRATEGY_FLAG = \"DD_UPDATE\" THEN\nUPDATE\nSET\n  TARGET.INVOICE_POSTING_DT = SOURCE.INVOICE_POSTING_DATE,\n  TARGET.INVOICE_CD_v2_test__ = SOURCE.INVOICE_CODE,\n  TARGET.TXN_TYPE = SOURCE.TRANSACTION_TYPE,\n  TARGET.ALLIVET_ORDER_NBR_v2_test__ = SOURCE.ALLIVET_ORDER_CODE,\n  TARGET.ALLIVET_SKU_NBR = SOURCE.ALLIVET_SKU,\n  TARGET.PRODUCT_ID = SOURCE.PRODUCT_ID,\n  TARGET.PETSMART_ORDER_NBR = SOURCE.PETSMART_ORDER_CODE,\n  TARGET.PETSMART_SKU_NBR = SOURCE.PETSMART_SKU,\n  TARGET.UPC_ID = SOURCE.UPC,\n  TARGET.SOLD_UNITS_QTY = SOURCE.UNITS_SOLD,\n  TARGET.PRODUCT_COST_v2_test__ = SOURCE.PRODUCT_COST,\n  TARGET.RETAIL_PRICE = SOURCE.RETAIL_PRICE,\n  TARGET.MANUFACTURER = SOURCE.MANUFACTURER,\n  TARGET.BRAND_NAME = SOURCE.BRAND,\n  TARGET.TITLE = SOURCE.TITLE,\n  TARGET.FREIGHT_FEE_AMT = SOURCE.FREIGHT_FEE,\n  TARGET.PACKAGING_FEE_AMT = SOURCE.PACKAGING_FEE,\n  TARGET.DISPENSING_FEE_AMT = SOURCE.DISPENSING_FEE,\n  TARGET.SHIPPED_DT = SOURCE.SHIPPED_DATE,\n  TARGET.FULFILLMENT_ORIGIN_ZIP_CD = SOURCE.FULFILLMENT_ORIGIN_ZIP_CODE,\n  TARGET.SHIP_CARRIER_NAME = SOURCE.SHIPPING_CARRIER,\n  TARGET.TRACKING_NBR = SOURCE.TRACKING_NUMBER,\n  TARGET.ALLIVET_CUSTOMER_NBR = SOURCE.ALLIVET_CUSTOMER_ID,\n  TARGET.PET_NAME = SOURCE.PET_NAME,\n  TARGET.PET_TYPE = SOURCE.PET_TYPE,\n  TARGET.BREED_TYPE = SOURCE.BREED_TYPE,\n  TARGET.PET_GENDER = SOURCE.PET_GENDER,\n  TARGET.PET_BIRT_DT = SOURCE.PET_DOB,\n  TARGET.PET_WEIGHT = SOURCE.PET_WEIGHT,\n  TARGET.PET_ALLERGY_DESC = SOURCE.PET_ALLERGY,\n  TARGET.PET_MEDICAL_CONDITION = SOURCE.PET_MEDICAL_CONDITIONS,\n  TARGET.PET_PREGNANT_FLAG = SOURCE.PET_IS_PREGNANT,\n  TARGET.VET_CLINIC_NAME = SOURCE.VET_CLINIC_NAME,\n  TARGET.VET_NAME = SOURCE.VETERINARY_NAME,\n  TARGET.VET_ADDRESS = SOURCE.VET_ADDRESS,\n  TARGET.VET_CITY = SOURCE.VET_CITY,\n  TARGET.VET_STATE_CD = SOURCE.VET_STATE,\n  TARGET.VET_ZIP_CD = SOURCE.VET_ZIP,\n  TARGET.VET_PHONE_NBR = SOURCE.VET_PHONE_NUMBER,\n  TARGET.DELETE_FLAG = SOURCE.DELETE_FLAG,\n  TARGET.UPDATE_TSTMP = SOURCE.UPDATE_TSTMP,\n  TARGET.LOAD_TSTMP = SOURCE.LOAD_TSTMP\n  WHEN MATCHED\n  AND SOURCE.UPDATE_STRATEGY_FLAG = \"DD_DELETE\"\n  AND TARGET.PRODUCT_ID = SOURCE.PRODUCT_ID\n  AND TARGET.PETSMART_ORDER_NBR = SOURCE.PETSMART_ORDER_CODE\n  AND TARGET.PETSMART_SKU_NBR = SOURCE.PETSMART_SKU\n  AND TARGET.UPC_ID = SOURCE.UPC\n  AND TARGET.SOLD_UNITS_QTY = SOURCE.UNITS_SOLD\n  AND TARGET.PRODUCT_COST_v2_test__ = SOURCE.PRODUCT_COST\n  AND TARGET.RETAIL_PRICE = SOURCE.RETAIL_PRICE\n  AND TARGET.MANUFACTURER = SOURCE.MANUFACTURER\n  AND TARGET.BRAND_NAME = SOURCE.BRAND\n  AND TARGET.TITLE = SOURCE.TITLE\n  AND TARGET.FREIGHT_FEE_AMT = SOURCE.FREIGHT_FEE\n  AND TARGET.PACKAGING_FEE_AMT = SOURCE.PACKAGING_FEE\n  AND TARGET.DISPENSING_FEE_AMT = SOURCE.DISPENSING_FEE\n  AND TARGET.SHIPPED_DT = SOURCE.SHIPPED_DATE\n  AND TARGET.FULFILLMENT_ORIGIN_ZIP_CD = SOURCE.FULFILLMENT_ORIGIN_ZIP_CODE\n  AND TARGET.SHIP_CARRIER_NAME = SOURCE.SHIPPING_CARRIER\n  AND TARGET.TRACKING_NBR = SOURCE.TRACKING_NUMBER\n  AND TARGET.ALLIVET_CUSTOMER_NBR = SOURCE.ALLIVET_CUSTOMER_ID\n  AND TARGET.PET_NAME = SOURCE.PET_NAME\n  AND TARGET.PET_TYPE = SOURCE.PET_TYPE\n  AND TARGET.BREED_TYPE = SOURCE.BREED_TYPE\n  AND TARGET.PET_GENDER = SOURCE.PET_GENDER\n  AND TARGET.PET_BIRT_DT = SOURCE.PET_DOB\n  AND TARGET.PET_WEIGHT = SOURCE.PET_WEIGHT\n  AND TARGET.PET_ALLERGY_DESC = SOURCE.PET_ALLERGY\n  AND TARGET.PET_MEDICAL_CONDITION = SOURCE.PET_MEDICAL_CONDITIONS\n  AND TARGET.PET_PREGNANT_FLAG = SOURCE.PET_IS_PREGNANT\n  AND TARGET.VET_CLINIC_NAME = SOURCE.VET_CLINIC_NAME\n  AND TARGET.VET_NAME = SOURCE.VETERINARY_NAME\n  AND TARGET.VET_ADDRESS = SOURCE.VET_ADDRESS\n  AND TARGET.VET_CITY = SOURCE.VET_CITY\n  AND TARGET.VET_STATE_CD = SOURCE.VET_STATE\n  AND TARGET.VET_ZIP_CD = SOURCE.VET_ZIP\n  AND TARGET.VET_PHONE_NBR = SOURCE.VET_PHONE_NUMBER\n  AND TARGET.DELETE_FLAG = SOURCE.DELETE_FLAG\n  AND TARGET.UPDATE_TSTMP = SOURCE.UPDATE_TSTMP\n  AND TARGET.LOAD_TSTMP = SOURCE.LOAD_TSTMP THEN DELETE\n  WHEN NOT MATCHED\n  AND SOURCE.UPDATE_STRATEGY_FLAG = \"DD_INSERT\" THEN\nINSERT\n  (\n    TARGET.INVOICE_POSTING_DT,\n    TARGET.INVOICE_CD_v2_test__,\n    TARGET.TXN_TYPE,\n    TARGET.ALLIVET_ORDER_NBR_v2_test__,\n    TARGET.ALLIVET_SKU_NBR,\n    TARGET.PRODUCT_ID,\n    TARGET.PETSMART_ORDER_NBR,\n    TARGET.PETSMART_SKU_NBR,\n    TARGET.UPC_ID,\n    TARGET.SOLD_UNITS_QTY,\n    TARGET.PRODUCT_COST_v2_test__,\n    TARGET.RETAIL_PRICE,\n    TARGET.MANUFACTURER,\n    TARGET.BRAND_NAME,\n    TARGET.TITLE,\n    TARGET.FREIGHT_FEE_AMT,\n    TARGET.PACKAGING_FEE_AMT,\n    TARGET.DISPENSING_FEE_AMT,\n    TARGET.SHIPPED_DT,\n    TARGET.FULFILLMENT_ORIGIN_ZIP_CD,\n    TARGET.SHIP_CARRIER_NAME,\n    TARGET.TRACKING_NBR,\n    TARGET.ALLIVET_CUSTOMER_NBR,\n    TARGET.PET_NAME,\n    TARGET.PET_TYPE,\n    TARGET.BREED_TYPE,\n    TARGET.PET_GENDER,\n    TARGET.PET_BIRT_DT,\n    TARGET.PET_WEIGHT,\n    TARGET.PET_ALLERGY_DESC,\n    TARGET.PET_MEDICAL_CONDITION,\n    TARGET.PET_PREGNANT_FLAG,\n    TARGET.VET_CLINIC_NAME,\n    TARGET.VET_NAME,\n    TARGET.VET_ADDRESS,\n    TARGET.VET_CITY,\n    TARGET.VET_STATE_CD,\n    TARGET.VET_ZIP_CD,\n    TARGET.VET_PHONE_NBR,\n    TARGET.DELETE_FLAG,\n    TARGET.UPDATE_TSTMP,\n    TARGET.LOAD_TSTMP\n  )\nVALUES\n  (\n    SOURCE.INVOICE_POSTING_DATE,\n    SOURCE.INVOICE_CODE,\n    SOURCE.TRANSACTION_TYPE,\n    SOURCE.ALLIVET_ORDER_CODE,\n    SOURCE.ALLIVET_SKU,\n    SOURCE.PRODUCT_ID,\n    SOURCE.PETSMART_ORDER_CODE,\n    SOURCE.PETSMART_SKU,\n    SOURCE.UPC,\n    SOURCE.UNITS_SOLD,\n    SOURCE.PRODUCT_COST,\n    SOURCE.RETAIL_PRICE,\n    SOURCE.MANUFACTURER,\n    SOURCE.BRAND,\n    SOURCE.TITLE,\n    SOURCE.FREIGHT_FEE,\n    SOURCE.PACKAGING_FEE,\n    SOURCE.DISPENSING_FEE,\n    SOURCE.SHIPPED_DATE,\n    SOURCE.FULFILLMENT_ORIGIN_ZIP_CODE,\n    SOURCE.SHIPPING_CARRIER,\n    SOURCE.TRACKING_NUMBER,\n    SOURCE.ALLIVET_CUSTOMER_ID,\n    SOURCE.PET_NAME,\n    SOURCE.PET_TYPE,\n    SOURCE.BREED_TYPE,\n    SOURCE.PET_GENDER,\n    SOURCE.PET_DOB,\n    SOURCE.PET_WEIGHT,\n    SOURCE.PET_ALLERGY,\n    SOURCE.PET_MEDICAL_CONDITIONS,\n    SOURCE.PET_IS_PREGNANT,\n    SOURCE.VET_CLINIC_NAME,\n    SOURCE.VETERINARY_NAME,\n    SOURCE.VET_ADDRESS,\n    SOURCE.VET_CITY,\n    SOURCE.VET_STATE,\n    SOURCE.VET_ZIP,\n    SOURCE.VET_PHONE_NUMBER,\n    SOURCE.DELETE_FLAG,\n    SOURCE.UPDATE_TSTMP,\n    SOURCE.LOAD_TSTMP\n  )\"\"\")"]},"id":"Shortcut_to_ALLIVET_INVOICE_DAY","position":{"x":0,"y":0},"type":"normalNode"}]}